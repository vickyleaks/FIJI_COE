<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator queue name to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueName" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Allows the Orchestrator folder name where the queue is created to be passed as an argument, instead of only being defined in the configuration file." Name="in_OrchestratorQueueFolder" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,873</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="49">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Forms.Integration</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.CompilerServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="77">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>WindowsFormsIntegration</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.VisualC</AssemblyReference>
      <AssemblyReference>System.Runtime.CompilerServices.Unsafe</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID3}" sap2010:Annotation.AnnotationText="[FIJI NonEDI COE(OCR) Process]&#xA;[Process description]&#xA;[Additional information (e.g., author, contact information and applications involved and required external setup)]" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="687,808" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">60,22.5</av:Point>
        <x:Double x:Key="StateContainerWidth">653.3333333333334</x:Double>
        <x:Double x:Key="StateContainerHeight">705</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">120,60 150,60 150,60.85 223,60.85</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Get the next transaction to be processed." DisplayName="Get Transaction Data" sap:VirtualizedContainerService.HintSize="251,122" sap2010:WorkflowViewState.IdRef="State_4">
      <State.Entry>
        <Sequence sap2010:Annotation.AnnotationText="Retrieve a new transaction data to be processed.&#xA;The TransactionNumber variable holds the current transaction number and incrementing this variable makes the framework retrieve the next transaction. If the framework is retrying a failed transaction, this variable is not incremented until the maximum number of retry attempts is reached." DisplayName="Retrieve Data" sap:VirtualizedContainerService.HintSize="582,1121" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="520,32" sap2010:WorkflowViewState.IdRef="ShouldStop_2" Result="[ShouldStop]" />
          <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="520,855" sap2010:WorkflowViewState.IdRef="If_11">
            <If.Then>
              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log message (Stop process requested)" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Stop process requested.&quot;]" />
                <Assign DisplayName="End Process (Stop process requested)" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[TransactionItem]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <TryCatch DisplayName="Try GetTransactionData" sap:VirtualizedContainerService.HintSize="438,359" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_TransactionData">[dt_TransactionData]</InOutArgument>
                      <InArgument x:TypeArguments="s:String[]" x:Key="in_arr_SingularityOutputFiles">[arr_SIngularityOutputFiles]</InArgument>
                      <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="io_TransactionItem">[TransactionItem]</InOutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Log exception message and end process" sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log message  (Get transaction data error)" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                        <Assign DisplayName="End Process (Could not get new transaction)" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[TransactionItem]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">224.333333333333,212.333333333333</av:Point>
          <av:Size x:Key="ShapeSize">251,122</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">217</x:Double>
          <x:Double x:Key="StateContainerHeight">34</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition DisplayName="New Transaction" sap:VirtualizedContainerService.HintSize="430,796" sap2010:WorkflowViewState.IdRef="Transition_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">349.83333333333303,334.33333333333303 349.83333333333303,440.666666666667</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process a single transaction. &#xA;The result of the processing can be: 1) Success, 2) Business Exception, 3) System Exception. &#xA;In the case of a system exception, the transaction can be automatically retried." DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="231,197" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <TryCatch DisplayName="Try to process transaction" sap:VirtualizedContainerService.HintSize="540,1004" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Process the current TransactionItem" sap:VirtualizedContainerService.HintSize="500,1083" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="IsSystemException" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign BusinessException" sap:VirtualizedContainerService.HintSize="438,70" sap2010:WorkflowViewState.IdRef="Assign_25">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="438,70" sap2010:WorkflowViewState.IdRef="Assign_29">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_startdatetime]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Now.ToString("dd-MM-yyyy HH:mm:ss")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="438,70" sap2010:WorkflowViewState.IdRef="Assign_43">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Object">[Config("IsSystemException")]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Object">[False]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Process workflow" sap:VirtualizedContainerService.HintSize="438,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\Process.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <OutArgument x:TypeArguments="snm:MailMessage" x:Key="out_mailmessage">[mail_message]</OutArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" x:Key="in_tuple_config">[tuple_config]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_vendorfile">[dt_vendorfile]</InArgument>
                          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsSystemException">[IsSystemException]</OutArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dt_locationfile">[dt_locationfile]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign sap:VirtualizedContainerService.HintSize="438,70" sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[str_enddatetime]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Now.ToString("dd-MM-yyyy HH:mm:ss")]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <TryCatch DisplayName="Try Catch SetTransactionStatus(Success) " sap:VirtualizedContainerService.HintSize="438,359" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus (SUCCESS)" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[Nothing]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                              <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[SystemException]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_dt_SummaryFile">[dt_summaryfile]</InOutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_str_startdatetime">[str_startdatetime]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_str_endDateTime">[str_enddatetime]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_str_receivedDate">[Now.ToString("MM/dd/yyyy")]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_str_reqDate" />
                              <InArgument x:TypeArguments="x:String" x:Key="in_str_customerPO" />
                              <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_mailMessage" />
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_MailStatusDataTable">[dt_MailStatusDataTable]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryCounter">[intRetryCounter]</InOutArgument>
                              <InOutArgument x:TypeArguments="x:String" x:Key="io_TransactionItem">[TransactionItem]</InOutArgument>
                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsSystemException">[CBool(Config("IsSystemException"))]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrEnvironmentUsername">[str_EnvironmentUsername]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_StrEnvironmentDomainName">[str_EnvironmentDomainName]</InArgument>
                              <OutArgument x:TypeArguments="x:Object" x:Key="out_objPythonReturn">[objPythonReturn]</OutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <ui:LogMessage DisplayName="Log message (Failed to set transaction status SE)" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="506,810" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="Exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Handle Business Exception" sap:VirtualizedContainerService.HintSize="500,701" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Set transaction status to BusinessRuleException" sap:VirtualizedContainerService.HintSize="438,70" sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:BusinessRuleException">[Exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="438,70" sap2010:WorkflowViewState.IdRef="Assign_31">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_enddatetime]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Now.ToString("dd-MM-yyyy HH:mm:ss")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <TryCatch DisplayName="Try Catch SetTransactionStatus(BE) " sap:VirtualizedContainerService.HintSize="438,359" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus (BE)" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[BusinessException]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[Nothing]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_dt_SummaryFile">[dt_summaryfile]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_startdatetime">[str_startdatetime]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_endDateTime">[str_enddatetime]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_receivedDate" />
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_reqDate" />
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_customerPO" />
                                  <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_mailMessage" />
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_MailStatusDataTable">[dt_MailStatusDataTable]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryCounter">[RetryNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="io_TransactionItem">[TransactionItem]</InOutArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsSystemException">[CBool(Config("IsSystemException"))]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_StrEnvironmentUsername">[str_EnvironmentUsername]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_StrEnvironmentDomainName">[str_EnvironmentDomainName]</InArgument>
                                  <OutArgument x:TypeArguments="x:Object" x:Key="out_objPythonReturn">[objPythonReturn]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log message (Failed to set transaction status SE)" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="506,21" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Handle System Exception" sap:VirtualizedContainerService.HintSize="500,698" sap2010:WorkflowViewState.IdRef="Sequence_30">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Set transaction status to SystemException" sap:VirtualizedContainerService.HintSize="438,70" sap2010:WorkflowViewState.IdRef="Assign_27">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="438,70" sap2010:WorkflowViewState.IdRef="Assign_32">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_enddatetime]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Now.ToString("dd-MM-yyyy HH:mm:ss")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <TryCatch DisplayName="Try Catch SetTransactionStatus " sap:VirtualizedContainerService.HintSize="438,359" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus (SE)" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessException">[Nothing]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[SystemException]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_ConsecutiveSystemExceptions">[ConsecutiveSystemExceptions]</InOutArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_dt_SummaryFile">[dt_summaryfile]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_startdatetime">[str_startdatetime]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_endDateTime">[str_enddatetime]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_receivedDate" />
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_reqDate" />
                                  <InArgument x:TypeArguments="x:String" x:Key="in_str_customerPO" />
                                  <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_mailMessage" />
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_MailStatusDataTable">[dt_MailStatusDataTable]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryCounter">[intRetryCounter]</InOutArgument>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="io_TransactionItem">[TransactionItem]</InOutArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsSystemException">[CBool(Config("IsSystemException"))]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_StrEnvironmentUsername">[str_EnvironmentUsername]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_StrEnvironmentDomainName">[str_EnvironmentDomainName]</InArgument>
                                  <OutArgument x:TypeArguments="x:Object" x:Key="out_objPythonReturn">[objPythonReturn]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Log message (Failed to set transaction status SE)" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">234.333333333333,440.666666666667</av:Point>
                  <av:Size x:Key="ShapeSize">231,197</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">197</x:Double>
                  <x:Double x:Key="StateContainerHeight">34</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="System Exception" sap:VirtualizedContainerService.HintSize="451.333333333333,521.333333333333" sap2010:WorkflowViewState.IdRef="Transition_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">303.633333333333,637.666666666667 303.633333333333,667.666666666667 507,667.666666666667 507,72.15 477,72.15</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>[SystemException IsNot Nothing]</Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Read configuration file and initialize applications used in the process." DisplayName="Initialization" sap:VirtualizedContainerService.HintSize="669,4596" sap2010:WorkflowViewState.IdRef="State_2">
                      <State.Entry>
                        <TryCatch DisplayName="Try initializing settings and applications" sap:VirtualizedContainerService.HintSize="623,4168" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Load configurations and open applications" sap:VirtualizedContainerService.HintSize="585,3931" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign SystemException (initialization)" sap:VirtualizedContainerService.HintSize="523,70" sap2010:WorkflowViewState.IdRef="Assign_5">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If sap2010:Annotation.AnnotationText="An uninitialized Config dictionary indicates that it is the first run of the process." Condition="[Config is Nothing]" DisplayName="If first run, read local configuration file" sap:VirtualizedContainerService.HintSize="523,3244" sap2010:WorkflowViewState.IdRef="If_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="First run" sap:VirtualizedContainerService.HintSize="441,2928" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="str_MinIOUserName" />
                                      <Variable x:TypeArguments="ss:SecureString" Name="secstr_MinIOPassword" />
                                      <Variable x:TypeArguments="x:String" Name="strConfigFilePath" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message screen resolution" sap:VirtualizedContainerService.HintSize="379,101" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="[&quot;The primary screen resolution is: &quot;+Screen.PrimaryScreen.Bounds.Width.ToString+&quot; x &quot;+ Screen.PrimaryScreen.Bounds.Height.ToString]" />
                                    <ui:GetRobotAsset AssetName="[&quot;FIJ_NonEDI_COE_ConfigFilePath&quot;]" CacheStrategy="None" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="379,181" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                                      <ui:GetRobotAsset.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:GetRobotAsset.TimeoutMS>
                                      <ui:GetRobotAsset.Value>
                                        <OutArgument x:TypeArguments="x:String">[strConfigFilePath]</OutArgument>
                                      </ui:GetRobotAsset.Value>
                                    </ui:GetRobotAsset>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">
                                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="strConfigFilePath" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">
                                          <VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="{}{&quot;Settings&quot;, &quot;Constants&quot;,&quot;Success_Logs&quot;,&quot;Exception_Logs&quot;}" />
                                        </InArgument>
                                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">
                                          <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                        </OutArgument>
                                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" x:Key="out_Tuple_Config">
                                          <VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" ExpressionText="tuple_config" />
                                        </OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <If sap2010:Annotation.AnnotationText="Overwrite queue name from in configuration file in case the argument in_OrchestratorQueueName is specified.&#xA;This provides backward compatibility with &lt; 2018.3." Condition="[Not String.IsNullOrWhiteSpace(in_OrchestratorQueueName)]" DisplayName="If in_OrchestratorQueueName is specified" sap:VirtualizedContainerService.HintSize="379,178" sap2010:WorkflowViewState.IdRef="If_10">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign DisplayName="Assign OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_20">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Object">[in_OrchestratorQueueName]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                    </If>
                                    <If sap2010:Annotation.AnnotationText="Overwrite folder name from in configuration file in case the argument in_OrchestratorQueueFolder is specified.&#xA;This provides backward compatibility with &lt; 2018.3." Condition="[Not String.IsNullOrWhiteSpace(in_OrchestratorQueueFolder)]" DisplayName="If in_OrchestratorQueueFolder is specified" sap:VirtualizedContainerService.HintSize="379,178" sap2010:WorkflowViewState.IdRef="If_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign DisplayName="Assign OrchestratorQueueFolder" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_28">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueFolder")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[in_OrchestratorQueueFolder]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                    </If>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Kills all Windows processes representing applications used in this business process to assure that the execution starts in a clean state.&#xA;Since the applications are assumed to be already closed, CloseAllApplications is skipped and just KillAllProcess is invoked." DisplayName="Invoke KillAllProcesses workflow (first run)" sap:VirtualizedContainerService.HintSize="379,163" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="s:String[]" x:Key="arr_killallprocess">[Config("KillAllProcessNames").ToString.Split(","c)]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_config">[Config]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add the process name to the logs generated after this point. &#xA;This log field can be used to create reports and visualizations about the process." DisplayName="Add Log Fields (BusinessProcessName)" sap:VirtualizedContainerService.HintSize="379,178" sap2010:WorkflowViewState.IdRef="AddLogFields_2">
                                      <ui:AddLogFields.Fields>
                                        <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                                      </ui:AddLogFields.Fields>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddLogFields>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="441,275" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Sending Started mail&#xA;" DisplayName="Project_Components\FIJI_COE_SendingSMTPMail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,164" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="RPA_Custom_Workflows\FIJI_COE_SendingSMTPMail.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:GetRobotCredential AssetName="[Config(&quot;FIJ_NonEDI_COE_MinIO_Credentials&quot;).ToString]" CacheStrategy="None" DisplayName="Get Oracle EBS Credentials from Orchestrator " FolderPath="[Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="379,398" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[secstr_MinIOPassword]" Username="[str_MinIOUserName]">
                                      <ui:GetRobotCredential.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:GetRobotCredential.TimeoutMS>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:GetRobotCredential>
                                    <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_41">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[Config("MinIOUserName")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[str_MinIOUserName]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_42">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[Config("MinIOPassword")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[New System.Net.NetworkCredential("",secstr_MinIOPassword).Password]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_56">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[str_EnvironmentDomainName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">WONDERFUL</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_55">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[str_EnvironmentUsername]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">BOTFIJ_PRD.FINA2R_04</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_51" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Server_Type">[Config("ServerType").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Mail_Operation_Type">[Config("MailOperationType").ToString.Split(","c)(1)]</InArgument>
                                        <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_MailMessages" />
                                        <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email_Message" />
                                        <OutArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="out_Attachments_List" />
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_isDefault_Account">False</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Email_Body">[config("Email_Body_Started").ToString.Split(";"c)(0) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; config("Email_Body_Started").ToString.Split(";"c)(1).Replace("{0}",Now.ToString("dd-MM-yyyy HH:mm:ss")) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Mail_Signature").ToString.Replace("&lt;RobotID&gt;",str_EnvironmentDomainName+"\"+str_EnvironmentUsername)]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Recepients_Type">[Config("MailRecepientsType").ToString.Split(";"c)(2)]</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsBody_HTML">True</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAutodiscover_Enabled" />
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsMailFilter" />
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Subject">[Config("Email_Subject_Started").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FromAddress">[Config("OutlookAccountName").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[Config("StartedNotificationMailsCC").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[Config("StartedNotificationMailsTo").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_BusinessAttachmentPath" />
                                        <InArgument x:TypeArguments="x:String" x:Key="in_LogMessageID">[Config("SC-LM-0025").ToString.Replace("{0}",Config("StartedNotificationMailsTo").ToString)]</InArgument>
                                        <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Arr_Attachments">[{""}]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Custom_Workflows\FIJI_COE_PreInitialization.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_57" UnSafe="False" WorkflowFileName="RPA_Custom_Workflows\FIJI_COE_PreInitialization.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" x:Key="in_tuple_config">[tuple_config]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FIJI_COE_RetrieveMail.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="RPA_Custom_Workflows\FIJI_COE_RetrieveMail.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_config">[Config]</InArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_summaryfile">[dt_summaryfile]</OutArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" x:Key="in_tuple_config">[tuple_config]</InArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_VendorFile">[dt_vendorfile]</OutArgument>
                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_bln_FolderNoData">[bln_NoFolderData]</OutArgument>
                                        <OutArgument x:TypeArguments="s:String[]" x:Key="out_arr_SingularityOutputFiles">[arr_SIngularityOutputFiles]</OutArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_MailStatusDataTable">[dt_MailStatusDataTable]</OutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrEnvironmentUsername">[str_EnvironmentUsername]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_StrEnvironmentDomainName">[str_EnvironmentDomainName]</InArgument>
                                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_locationfile">[dt_locationfile]</OutArgument>
                                        <OutArgument x:TypeArguments="x:Int32" x:Key="out_int_mailcounter">[int_MailCounter]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\KillAllProcesses.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="s:String[]" x:Key="arr_killallprocess">[Config("KillAllProcessNames").ToString.Split(","c)]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_config">[Config]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </If.Else>
                              </If>
                              <If sap2010:Annotation.AnnotationText="If MaxConsecutiveSystemExceptions number was reached, throw Exception at initialization and go to End Process state, thus finalizing the execution. &#xA;If MaxConsecutiveSystemExceptions is 0, then any number of consecutive System Exceptions is allowed." Condition="[Cint(Config(&quot;MaxConsecutiveSystemExceptions&quot;))&gt;0 AndAlso ConsecutiveSystemExceptions&gt;=Cint(Config(&quot;MaxConsecutiveSystemExceptions&quot;))]" DisplayName="If maxConsecutiveSystemExceptions exceeded" sap:VirtualizedContainerService.HintSize="523,253" sap2010:WorkflowViewState.IdRef="If_13">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Throw DisplayName="Throw Consecutive Exceptions exceeded" Exception="[new Exception(Config(&quot;ExceptionMessage_ConsecutiveErrors&quot;).ToString + &quot; Consecutive retry number: &quot; + (ConsecutiveSystemExceptions+1).ToString)]" sap:VirtualizedContainerService.HintSize="334,97" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                </If.Then>
                              </If>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap:VirtualizedContainerService.HintSize="523,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_config">[Config]</InArgument>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" x:Key="in_tuple_config">[tuple_config]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="589,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="559,1242" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="497,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_70" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                        <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">
                                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SC-LM-0032&quot;).ToString.Replace(&quot;{0}&quot;,Exception.Message)" />
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">
                                        <Literal x:TypeArguments="x:String">Main.xaml</Literal>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">
                                        <Literal x:TypeArguments="x:String">Error</Literal>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                                        <Literal x:TypeArguments="x:String">SC-LM-0032</Literal>
                                      </InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign sap2010:Annotation.AnnotationText="Failures during the initialization are considered system exceptions and lead to the End Process state, thus finalizing the execution." DisplayName="Assign SystemException" sap:VirtualizedContainerService.HintSize="497,142" sap2010:WorkflowViewState.IdRef="Assign_21">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[SystemException]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[Exception]</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="497,70" sap2010:WorkflowViewState.IdRef="Assign_44">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Exception.Message]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[ExceptionMessage.Split(&quot;,&quot;)(0)]" sap:VirtualizedContainerService.HintSize="497,666" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                    <Switch.Default>
                                      <Sequence sap:VirtualizedContainerService.HintSize="441,406" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File_MW" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_55" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Server_Type">[Config("ServerType").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Mail_Operation_Type">[Config("MailOperationType").ToString.Split(","c)(1)]</InArgument>
                                            <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_MailMessages" />
                                            <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email_Message" />
                                            <OutArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="out_Attachments_List" />
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_isDefault_Account">True</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Email_Body">[Config("Email_Body_System_Exception").ToString.Split(";"c)(0) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Email_Body_System_Exception").ToString.Split(";"c)(1).Replace("{0}",Exception.Message) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Mail_Signature").ToString.Replace("&lt;RobotID&gt;",str_EnvironmentDomainName+"\"+str_EnvironmentUsername)]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Recepients_Type">[Config("MailRecepientsType").ToString.Split(";"c)(0)]</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsBody_HTML">True</InArgument>
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAutodiscover_Enabled" />
                                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsMailFilter" />
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Subject">[Config("Email_Subject_Application").ToString.Replace("Process Name",Config("logF_BusinessProcessName").ToString)]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_FromAddress">[Config("ApplicationExceptionMailsFrom").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[Config("ApplicationExceptionMailsCC").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[Config("ApplicationExceptionMailsTo").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_BusinessAttachmentPath" />
                                            <InArgument x:TypeArguments="x:String" x:Key="in_LogMessageID" />
                                            <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Arr_Attachments">[{Save_ScreenShotPath}]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:InvokeWorkflowFile>
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_69" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                              <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">
                                              <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SC-LM-0023&quot;).ToString.Replace(&quot;{0}&quot;,Config(&quot;ApplicationExceptionMailsTo&quot;).ToString)" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">
                                              <Literal x:TypeArguments="x:String">Main.xaml</Literal>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">
                                              <Literal x:TypeArguments="x:String">Info</Literal>
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                                              <Literal x:TypeArguments="x:String">SC-LM-0023</Literal>
                                            </InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </Sequence>
                                    </Switch.Default>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence x:Key="EX-LAM-NEDI-0018" sap:VirtualizedContainerService.HintSize="598,935" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                        <ui:CommentOut.Body>
                                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="500,441" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <TryCatch.Try>
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File_TS" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_47" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[Config("ExceptionScreenShotFolderPath").ToString]</InArgument>
                                                    <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath">[Save_ScreenShotPath]</InOutArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:InvokeWorkflowFile>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Warn" Message="[exception.Message]" />
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                          </Sequence>
                                        </ui:CommentOut.Body>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:CommentOut>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File_MW" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_48" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Server_Type">[Config("ServerType").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Mail_Operation_Type">[Config("MailOperationType").ToString.Split(","c)(1)]</InArgument>
                                          <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_MailMessages" />
                                          <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email_Message" />
                                          <OutArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="out_Attachments_List" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_isDefault_Account">True</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Email_Body">[config("Email_Body_OrchestratorAssets").ToString.Split(";"c)(0) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; config("Email_Body_OrchestratorAssets").ToString.Split(";"c)(1).Replace("{0}",Config("Applications").ToString.Split(","c)(1)) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Mail_Signature").ToString.Replace("&lt;RobotID&gt;",str_EnvironmentDomainName+"\"+str_EnvironmentUsername)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Recepients_Type">[Config("MailRecepientsType").ToString.Split(";"c)(0)]</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsBody_HTML">True</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAutodiscover_Enabled" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsMailFilter" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Subject">[Config("Email_Subject_Application").ToString.Replace("Process Name",config("logF_BusinessProcessName").ToString)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FromAddress">[Config("ApplicationExceptionMailsFrom").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[Config("ApplicationExceptionMailsCC").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[Config("ApplicationExceptionMailsTo").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_BusinessAttachmentPath" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessageID" />
                                          <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Arr_Attachments">[{""}]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_72" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[Config("SC-LM-0023").ToString.Replace("{0}",Config("ApplicationExceptionMailsTo").ToString)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">Main.xaml</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Info</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">SC-LM-0023</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Sequence x:Key="EX-LBM-NEDI-0003" sap:VirtualizedContainerService.HintSize="500,887" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch sap:VirtualizedContainerService.HintSize="438,481" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence sap:VirtualizedContainerService.HintSize="400,244" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\TakeScreenshot.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[Config("ExceptionScreenShotFolderPath").ToString]</InArgument>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath">[Save_ScreenShotPath]</InOutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Warn" Message="[exception.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File_MW" sap:VirtualizedContainerService.HintSize="438,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Server_Type">[Config("ServerType").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Mail_Operation_Type">[Config("MailOperationType").ToString.Split(","c)(1)]</InArgument>
                                          <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_MailMessages" />
                                          <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email_Message" />
                                          <OutArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="out_Attachments_List" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_isDefault_Account">False</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Email_Body">[config("Email_Body_InvalidCredentials_Application").ToString.Split(";"c)(0) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; config("Email_Body_InvalidCredentials_Application").ToString.Split(";"c)(1).Replace("{0}",Config("Applications").ToString.Split(","c)(1)) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Mail_Signature").ToString.Replace("&lt;RobotID&gt;",str_EnvironmentDomainName+"\"+str_EnvironmentUsername)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Recepients_Type">[Config("MailRecepientsType").ToString.Split(";"c)(0)]</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsBody_HTML">True</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAutodiscover_Enabled" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsMailFilter" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Subject">[Config("Email_Subject_Business").ToString.Replace("Process Name",config("logF_BusinessProcessName").ToString)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FromAddress">[Config("BusinessNotificationMailsFrom").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[Config("BusinessNotificationMailsCC").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[Config("BusinessNotificationMailsTo").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_BusinessAttachmentPath">[Save_ScreenShotPath]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessageID" />
                                          <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Arr_Attachments">[{Save_ScreenShotPath}]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="438,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_75" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[Config("SC-LM-0024").ToString.Replace("{0}",Config("BusinessNotificationMailsTo").ToString)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">Main.xaml</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Info</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">SC-LM-0024</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Sequence x:Key="EX-LAM-NEDI-0019" sap:VirtualizedContainerService.HintSize="500,887" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="379,61" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence sap:VirtualizedContainerService.HintSize="400,244" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\TakeScreenshot.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_45" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[Config("ExceptionScreenShotFolderPath").ToString]</InArgument>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath">[Save_ScreenShotPath]</InOutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Warn" Message="[exception.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File_MW" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_49" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Server_Type">[Config("ServerType").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Mail_Operation_Type">[Config("MailOperationType").ToString.Split(","c)(1)]</InArgument>
                                          <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_MailMessages" />
                                          <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email_Message" />
                                          <OutArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="out_Attachments_List" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_isDefault_Account">True</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Email_Body">[config("Email_Body_Load_Application").ToString.Split(";"c)(0) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; config("Email_Body_Load_Application").ToString.Split(";"c)(1).Replace("{0}",Config("Applications").ToString.Split(","c)(2)) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Mail_Signature").ToString.Replace("&lt;RobotID&gt;",str_EnvironmentDomainName+"\"+str_EnvironmentUsername)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Recepients_Type">[Config("MailRecepientsType").ToString.Split(";"c)(0)]</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsBody_HTML">True</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAutodiscover_Enabled" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsMailFilter" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Subject">[Config("Email_Subject_Application").ToString.Replace("Process Name",config("logF_BusinessProcessName").ToString)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FromAddress">[Config("ApplicationExceptionMailsFrom").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[Config("ApplicationExceptionMailsCC").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[Config("ApplicationExceptionMailsTo").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_BusinessAttachmentPath">[Save_ScreenShotPath]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessageID" />
                                          <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Arr_Attachments">[{Save_ScreenShotPath}]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_74" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[Config("SC-LM-0023").ToString.Replace("{0}",Config("ApplicationExceptionMailsTo").ToString)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">Main.xaml</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Info</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">SC-LM-0023</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Sequence x:Key="EX-LBM-NEDI-0026" sap:VirtualizedContainerService.HintSize="441,406" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File_MW" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_56" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Server_Type">[Config("ServerType").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Mail_Operation_Type">[Config("MailOperationType").ToString.Split(","c)(1)]</InArgument>
                                          <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_MailMessages" />
                                          <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email_Message" />
                                          <OutArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="out_Attachments_List" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_isDefault_Account">True</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Email_Body">[config("Email_Body_Missing_Mappingfiles").ToString.Split(";"c)(0) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; config("Email_Body_Missing_Mappingfiles").ToString.Split(";"c)(1).Replace("{0}",ExceptionMessage.Split(",")(1)) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Mail_Signature").ToString.Replace("&lt;RobotID&gt;",str_EnvironmentDomainName+"\"+str_EnvironmentUsername)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Recepients_Type">[Config("MailRecepientsType").ToString.Split(";"c)(0)]</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsBody_HTML">True</InArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAutodiscover_Enabled" />
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsMailFilter" />
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Subject">[Config("Email_Subject_Business").ToString.Replace("Process Name",config("logF_BusinessProcessName").ToString)]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_FromAddress">[Config("BusinessNotificationMailsFrom").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[Config("BusinessNotificationMailsCC").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[Config("BusinessNotificationMailsTo").ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_BusinessAttachmentPath">[Save_ScreenShotPath]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_LogMessageID" />
                                          <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Arr_Attachments">[{""}]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeWorkflowFile>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_71" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                                            <VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="Config" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">
                                            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Config(&quot;SC-LM-0024&quot;).ToString.Replace(&quot;{0}&quot;,Config(&quot;BusinessNotificationMailsTo&quot;).ToString)" />
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">
                                            <Literal x:TypeArguments="x:String">Main.xaml</Literal>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">
                                            <Literal x:TypeArguments="x:String">Info</Literal>
                                          </InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                                            <Literal x:TypeArguments="x:String">SC-LM-0024</Literal>
                                          </InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </Switch>
                                </Sequence>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">223,10</av:Point>
                          <av:Size x:Key="ShapeSize">254,113</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">220</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Successful" sap:VirtualizedContainerService.HintSize="448.8,802.4" sap2010:WorkflowViewState.IdRef="Transition_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                              <av:PointCollection x:Key="ConnectorLocation">350,123 350,153 349.83333333333303,153 349.83333333333303,212.333333333333</av:PointCollection>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <ui:Comment DisplayName="Comment (default transition)" sap:VirtualizedContainerService.HintSize="333.6,75.2" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
                          </Transition.Action>
                          <Transition.Condition>[SystemException is Nothing]</Transition.Condition>
                        </Transition>
                        <Transition DisplayName="System Exception (failed initialization)" sap:VirtualizedContainerService.HintSize="448.8,802.4" sap2010:WorkflowViewState.IdRef="Transition_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">350,123 350,153 82.8,153 82.8,208</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="End process and close all applications used." DisplayName="End Process" sap:VirtualizedContainerService.HintSize="144,129" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
                              <State.Entry>
                                <Sequence sap:VirtualizedContainerService.HintSize="767,1619" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="705,1497" sap2010:WorkflowViewState.IdRef="TryCatch_22">
                                    <TryCatch.Try>
                                      <If Condition="[int_MailCounter&gt;0 or TransactionNumber&gt;1]" sap:VirtualizedContainerService.HintSize="667,1260" sap2010:WorkflowViewState.IdRef="If_15">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="sd:DataTable" Name="dt_TempTable" />
                                              <Variable x:TypeArguments="x:Int32" Name="int_MailTableIndex" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="922,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_54" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[config("SC-LM-0028").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">EndProcess.xaml</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Info</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">SC-LM-0028</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <Assign sap:VirtualizedContainerService.HintSize="922,70" sap2010:WorkflowViewState.IdRef="Assign_57">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="sd:DataTable">[dt_TempTable]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="sd:DataTable">[dt_MailStatusDataTable.Copy]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="922,9562" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                                              <TryCatch.Try>
                                                <Sequence sap:VirtualizedContainerService.HintSize="884,9325" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each Row in Data Table: Loop through mail status table and append all PO into one with same messageID" DataTable="[dt_TempTable]" DisplayName="For Each Row in Data Table: Loop through mail status table and append all PO into one with same messageID" sap:VirtualizedContainerService.HintSize="822,103" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                                                    <ui:ForEachRow.Body>
                                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="TempRow" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="544,918" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If Condition="[TempRow(&quot;Status&quot;).ToString = &quot;Success&quot;]" sap:VirtualizedContainerService.HintSize="482,796" sap2010:WorkflowViewState.IdRef="If_24">
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,533" sap2010:WorkflowViewState.IdRef="Sequence_68">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="x:Int32" Name="int_TempMsgIDIndex" />
                                                                </Sequence.Variables>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[dt_MailStatusDataTable]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="338,301" sap2010:WorkflowViewState.IdRef="LookupDataTable_2" LookupColumnName="MessageID" LookupValue="[TempRow(&quot;MessageID&quot;).ToString]" RowIndex="[int_TempMsgIDIndex]" />
                                                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_MailStatusDataTable(int_TempMsgIDIndex)(2)]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">[dt_MailStatusDataTable(int_TempMsgIDIndex)(2).ToString +"," + TempRow("PONumber").ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </If.Then>
                                                          </If>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ForEachRow.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ForEachRow>
                                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[int_MailTableIndex]" DataTable="[dt_MailStatusDataTable]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="822,5869" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                                    <ui:ForEachRow.Body>
                                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="788,5745" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign sap:VirtualizedContainerService.HintSize="726,70" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">[bln_IsMailFromProcessedFolder]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:GetOutlookMailMessages Filter="{x:Null}" TimeoutMS="{x:Null}" Account="[Config(&quot;OutlookReceiveAccountName&quot;).ToString]" sap2010:Annotation.AnnotationText="Retrieve mail from Inbox folder by filtering Message-ID" DisplayName="Get Outlook Mail Messages" FilterByMessageIds="[{CurrentRow(&quot;MessageID&quot;).ToString}]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="726,74" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="[Config(&quot;OutlookMailFolder&quot;).ToString]" MarkAsRead="False" Messages="[liMm_SentMailMessage]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="5">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:GetOutlookMailMessages>
                                                          <If sap2010:Annotation.AnnotationText="If: Retrieve mail didn't retrieve from Inbox folder retrieve from Processed folder by filtering Message-ID" Condition="[Not(liMm_SentMailMessage.Count&gt;0)]" DisplayName="If: Retrieve mail didn't retrieve from Inbox folder retrieve from Processed folder by filtering Message-ID" sap:VirtualizedContainerService.HintSize="726,582" sap2010:WorkflowViewState.IdRef="If_16">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:GetOutlookMailMessages Filter="{x:Null}" TimeoutMS="{x:Null}" Account="[Config(&quot;OutlookReceiveAccountName&quot;).ToString]" DisplayName="Get Outlook Mail Messages" FilterByMessageIds="[{CurrentRow(&quot;MessageID&quot;).ToString}]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MailFolder="[Config(&quot;Move_FolderName&quot;).ToString]" MarkAsRead="False" Messages="[liMm_SentMailMessage]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="5" />
                                                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[bln_IsMailFromProcessedFolder]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <If sap2010:Annotation.AnnotationText="If didn't retreive mail from processed and manual folder as well, skip the next steps" Condition="[liMm_SentMailMessage.count=0]" DisplayName="If didn't retreive mail from processed and manual folder as well, skip the next steps" sap:VirtualizedContainerService.HintSize="726,1128" sap2010:WorkflowViewState.IdRef="If_23">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="544,834" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Lookup mail table row PO index in Summary table" DataTable="[dt_summaryfile]" DisplayName="Lookup mail table row PO index in Summary table" sap:VirtualizedContainerService.HintSize="482,103" sap2010:WorkflowViewState.IdRef="LookupDataTable_3" LookupColumnName="Customer PO" LookupValue="[CurrentRow(&quot;PONumber&quot;).ToString.Split(&quot;,&quot;c)(0)]" RowIndex="[int_SummaryFilePORowIndex]">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:LookupDataTable>
                                                                <If sap2010:Annotation.AnnotationText="If PO Number row index found in Summary table, then only update the corresponding fields like: Sender Address, Sender Name, Received Date" Condition="[Not(int_SummaryFilePORowIndex=-1)]" DisplayName="If PO Number row index found in Summary table, then only update the corresponding fields " sap:VirtualizedContainerService.HintSize="482,497" sap2010:WorkflowViewState.IdRef="If_25">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_62">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Object">[dt_summaryfile(int_SummaryFilePORowIndex)(0)]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Object">["Didn't retrieve the mail, due to invalid file name"]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                </If>
                                                                <ui:Continue sap:VirtualizedContainerService.HintSize="482,32" sap2010:WorkflowViewState.IdRef="Continue_1" />
                                                              </Sequence>
                                                            </If.Then>
                                                          </If>
                                                          <Assign sap:VirtualizedContainerService.HintSize="726,70" sap2010:WorkflowViewState.IdRef="Assign_34">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[str_ReceivedDateTime]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(liMm_SentMailMessage(0).Headers("Date").ToString.Split(","c)(1).ToString.Trim.Substring(0,20),"dd MMM yyyy HH:mm:ss", System.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <If Condition="[CurrentRow(&quot;PONumber&quot;).ToString=&quot;&quot;]" sap:VirtualizedContainerService.HintSize="726,430" sap2010:WorkflowViewState.IdRef="If_27">
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,154" sap2010:WorkflowViewState.IdRef="Sequence_74">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:Continue sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Lookup mail table row PO index in Summary table" DataTable="[dt_summaryfile]" DisplayName="Lookup mail table row PO index in Summary table" sap:VirtualizedContainerService.HintSize="726,332" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="Customer PO" LookupValue="[CurrentRow(&quot;PONumber&quot;).ToString.Split(&quot;,&quot;c)(0)]" RowIndex="[int_SummaryFilePORowIndex]">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:LookupDataTable>
                                                          <If sap2010:Annotation.AnnotationText="If PO Number row index found in Summary table, then only update the corresponding fields like: Sender Address, Sender Name, Received Date" Condition="[Not(int_SummaryFilePORowIndex=-1)]" DisplayName="If PO Number row index found in Summary table, then only update the corresponding fields " sap:VirtualizedContainerService.HintSize="726,827" sap2010:WorkflowViewState.IdRef="If_19">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,522" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_45">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_summaryfile(int_SummaryFilePORowIndex)(0)]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">[liMm_SentMailMessage(0).Subject]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_46">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_summaryfile(int_SummaryFilePORowIndex)(1)]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">[liMm_SentMailMessage(0).SenderEmailAddress]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_47">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_summaryfile(int_SummaryFilePORowIndex)(2)]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">[liMm_SentMailMessage(0).Sender.DisplayName]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_48">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[dt_summaryfile(int_SummaryFilePORowIndex)(5)]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[str_ReceivedDateTime]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </If.Then>
                                                          </If>
                                                          <If sap2010:Annotation.AnnotationText="If: Mail status table row is success, reply to the respective user" Condition="[CurrentRow(&quot;Status&quot;).ToString.ToLower.Contains(&quot;success&quot;) and Not(Config.ContainsKey(CurrentRow(&quot;MessageID&quot;).ToString+&quot;_Success&quot;))]" DisplayName="If: Mail status table row is success, reply to the respective user" sap:VirtualizedContainerService.HintSize="726,1790" sap2010:WorkflowViewState.IdRef="If_18">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="644,1496" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                                <Sequence.Variables>
                                                                  <Variable x:TypeArguments="x:String" Name="str_ArrPONumber" />
                                                                </Sequence.Variables>
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Assign sap:VirtualizedContainerService.HintSize="582,70" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[Config(CurrentRow("MessageID").ToString+"_Success")]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">["Success"]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap:VirtualizedContainerService.HintSize="582,70" sap2010:WorkflowViewState.IdRef="Assign_54">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[str_ArrPONumber]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[String.Join(",",CurrentRow("PONumber").ToString.Split(","c).Union(CurrentRow("PONumber").ToString.Split(","c)).ToArray)]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="582,364" sap2010:WorkflowViewState.IdRef="TryCatch_25">
                                                                  <TryCatch.Try>
                                                                    <ui:ReplyToOutlookMailMessage AddBcc="{x:Null}" AddCc="{x:Null}" AddTo="{x:Null}" NewSubject="{x:Null}" ReplyFrom="{x:Null}" TimeoutMS="{x:Null}" Body="[Config(&quot;Email_Reply_Body_Completed&quot;).ToString.Split(&quot;;&quot;c)(0) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; Config(&quot;Email_Reply_Body_Completed&quot;).ToString.Split(&quot;;&quot;c)(1).Replace(&quot;{0}&quot;,str_ArrPONumber) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; Config(&quot;Mail_SignatureReply&quot;).ToString]" DisplayName="Reply To Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,127" sap2010:WorkflowViewState.IdRef="ReplyToOutlookMailMessage_1" Importance="Normal" MailMessage="[liMm_SentMailMessage(0)]" ReplyAll="False">
                                                                      <ui:ReplyToOutlookMailMessage.Files>
                                                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                                      </ui:ReplyToOutlookMailMessage.Files>
                                                                    </ui:ReplyToOutlookMailMessage>
                                                                  </TryCatch.Try>
                                                                  <TryCatch.Catches>
                                                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_26">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                        <ActivityAction.Argument>
                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                        </ActivityAction.Argument>
                                                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Warn" Message="[&quot;Exception occured at while replying mail to the customer&quot; + exception.Message]" />
                                                                      </ActivityAction>
                                                                    </Catch>
                                                                  </TryCatch.Catches>
                                                                </TryCatch>
                                                                <If sap2010:Annotation.AnnotationText="If: Mail retrieve from Inbox folder, moved that mail into Processed folder" Condition="[Not(bln_IsMailFromProcessedFolder)]" DisplayName="If: Mail retrieve from Inbox folder, moved that mail into Processed folder" sap:VirtualizedContainerService.HintSize="582,750" sap2010:WorkflowViewState.IdRef="If_17">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="500,456" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,334" sap2010:WorkflowViewState.IdRef="TryCatch_24">
                                                                        <TryCatch.Try>
                                                                          <ui:MoveOutlookMessage Account="[Config(&quot;OutlookReceiveAccountName&quot;).ToString]" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,97" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_1" MailFolder="[Config(&quot;Move_FolderName&quot;).ToString]" MailMessage="[liMm_SentMailMessage(0)]" />
                                                                        </TryCatch.Try>
                                                                        <TryCatch.Catches>
                                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                                              <ActivityAction.Argument>
                                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                              </ActivityAction.Argument>
                                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Warn" Message="[&quot;Exception occured at while moving mail into processed folder: &quot;+exception.Message]" />
                                                                            </ActivityAction>
                                                                          </Catch>
                                                                        </TryCatch.Catches>
                                                                      </TryCatch>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                </If>
                                                              </Sequence>
                                                            </If.Then>
                                                          </If>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ForEachRow.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ForEachRow>
                                                  <ui:FilterDataTable sap2010:Annotation.AnnotationText="Filter Mail status table with Status column = null" DataTable="[dt_MailStatusDataTable]" DisplayName="Filter Mail status table with Status column = null" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="818,92" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[dt_MailStatusDataTable]" SelectColumnsMode="Keep">
                                                    <ui:FilterDataTable.Filters>
                                                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                                        <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                                                          <ui:FilterOperationArgument.Column>
                                                            <InArgument x:TypeArguments="x:String">["Status"]</InArgument>
                                                          </ui:FilterOperationArgument.Column>
                                                          <ui:FilterOperationArgument.Operand>
                                                            <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                                          </ui:FilterOperationArgument.Operand>
                                                        </ui:FilterOperationArgument>
                                                      </scg:List>
                                                    </ui:FilterDataTable.Filters>
                                                    <ui:FilterDataTable.SelectColumns>
                                                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                                                        <x:Null />
                                                      </scg:List>
                                                    </ui:FilterDataTable.SelectColumns>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:FilterDataTable>
                                                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each Row in Mail status Data Table, Status column = null" DataTable="[dt_MailStatusDataTable]" DisplayName="For Each Row in Mail status Data Table, Status column = null" sap:VirtualizedContainerService.HintSize="647,3019" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                                    <ui:ForEachRow.Body>
                                                      <ActivityAction x:TypeArguments="sd:DataRow">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                                        </ActivityAction.Argument>
                                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="613,2863" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Assign sap:VirtualizedContainerService.HintSize="551,70" sap2010:WorkflowViewState.IdRef="Assign_50">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">[bln_IsMailFromProcessedFolder]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <ui:GetOutlookMailMessages Filter="{x:Null}" TimeoutMS="{x:Null}" Account="[Config(&quot;OutlookReceiveAccountName&quot;).ToString]" sap2010:Annotation.AnnotationText="Retrieve mail from Inbox folder by filtering Message-ID" DisplayName="Get Outlook Mail Messages:Retrieve mail from Inbox folder by filtering Message-ID" FilterByMessageIds="[{CurrentRow(&quot;MessageID&quot;).ToString}]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="551,74" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_3" MailFolder="[Config(&quot;OutlookMailFolder&quot;).ToString]" MarkAsRead="False" Messages="[liMm_SentMailMessage]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="5">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:GetOutlookMailMessages>
                                                          <If sap2010:Annotation.AnnotationText="If: Retrieve mail didn't retrieve from Inbox folder retrieve from Processed folder by filtering Message-ID" Condition="[Not(liMm_SentMailMessage.Count&gt;0)]" DisplayName="If: Retrieve mail from Inbox folder by filtering Message-ID" sap:VirtualizedContainerService.HintSize="551,624" sap2010:WorkflowViewState.IdRef="If_21">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <If.Then>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,306" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:GetOutlookMailMessages Filter="{x:Null}" TimeoutMS="{x:Null}" Account="[Config(&quot;OutlookReceiveAccountName&quot;).ToString]" sap2010:Annotation.AnnotationText="Retrieve mail from process folder by filtering Message-ID" DisplayName="Get Outlook Mail Messages" FilterByMessageIds="[{CurrentRow(&quot;MessageID&quot;).ToString}]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="338,74" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_4" MailFolder="[Config(&quot;Move_FolderName&quot;).ToString]" MarkAsRead="False" Messages="[liMm_SentMailMessage]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="5">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </ui:GetOutlookMailMessages>
                                                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_51">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Boolean">[bln_IsMailFromProcessedFolder]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <ui:IfElseIf sap2010:Annotation.AnnotationText="Else If: If outputs didn't retreive, then send an alert mail whether the PO is getting or not?" DisplayName="Else If: If outputs didn't retreive, then send an alert mail whether the PO is getting or not?" sap:VirtualizedContainerService.HintSize="551,1752" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                                                            <ui:IfElseIf.ConditionBlocks>
                                                              <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                                                <ui:IfElseIfBlock BlockType="If" Condition="[(Config.ContainsKey(CurrentRow(&quot;MessageID&quot;).ToString+&quot;_Success&quot;) and Not(Config.ContainsKey(CurrentRow(&quot;MessageID&quot;).ToString)))]">
                                                                  <ui:IfElseIfBlock.Then>
                                                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,508" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign sap:VirtualizedContainerService.HintSize="434,70" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Object">[Config(CurrentRow("MessageID").ToString)]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Object">["1Success"]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,276" sap2010:WorkflowViewState.IdRef="TryCatch_26">
                                                                        <TryCatch.Try>
                                                                          <ui:ReplyToOutlookMailMessage AddBcc="{x:Null}" AddCc="{x:Null}" AddTo="{x:Null}" NewSubject="{x:Null}" ReplyFrom="{x:Null}" TimeoutMS="{x:Null}" Body="[Config(&quot;Email_Reply_Body_Partially_Completed&quot;).ToString.Split(&quot;;&quot;c)(0) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; Config(&quot;Email_Reply_Body_Partially_Completed&quot;).ToString.Split(&quot;;&quot;c)(1).Replace(&quot;{0}&quot;,CurrentRow(&quot;PONumber&quot;).ToString) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; Config(&quot;Mail_SignatureReply&quot;).ToString]" DisplayName="Reply To Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,127" sap2010:WorkflowViewState.IdRef="ReplyToOutlookMailMessage_4" Importance="Normal" MailMessage="[liMm_SentMailMessage(0)]" ReplyAll="False">
                                                                            <ui:ReplyToOutlookMailMessage.Files>
                                                                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                                            </ui:ReplyToOutlookMailMessage.Files>
                                                                          </ui:ReplyToOutlookMailMessage>
                                                                        </TryCatch.Try>
                                                                        <TryCatch.Catches>
                                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_27">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                                              <ActivityAction.Argument>
                                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                              </ActivityAction.Argument>
                                                                            </ActivityAction>
                                                                          </Catch>
                                                                        </TryCatch.Catches>
                                                                      </TryCatch>
                                                                    </Sequence>
                                                                  </ui:IfElseIfBlock.Then>
                                                                </ui:IfElseIfBlock>
                                                                <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Not(Config.ContainsKey(CurrentRow(&quot;MessageID&quot;).ToString+&quot;_Success&quot;)) and Not(Config.ContainsKey(CurrentRow(&quot;MessageID&quot;).ToString+&quot;1&quot;))]">
                                                                  <ui:IfElseIfBlock.Then>
                                                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,884" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign sap:VirtualizedContainerService.HintSize="434,70" sap2010:WorkflowViewState.IdRef="Assign_53">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Object">[Config(CurrentRow("MessageID").ToString+"1")]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Object">["0Success"]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign sap:VirtualizedContainerService.HintSize="434,70" sap2010:WorkflowViewState.IdRef="Assign_63">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[str_ReceivedDateTime]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(liMm_SentMailMessage(0).Headers("Date").ToString.Split(","c)(1).ToString.Trim.Substring(0,20),"dd MMM yyyy HH:mm:ss", System.Globalization.CultureInfo.InvariantCulture).ToString("MM/dd/yyyy")]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add Data Row to Summary data table" ArrayRow="[{liMm_SentMailMessage(0).Subject,liMm_SentMailMessage(0).SenderEmailAddress,liMm_SentMailMessage(0).Sender.DisplayName,&quot;&quot;,Config(&quot;POType&quot;).ToString,str_ReceivedDateTime,&quot;&quot;,Str_EnvironmentDomainName+&quot;\&quot;+Str_EnvironmentUsername,Config(&quot;BotStatusFailed&quot;),&quot;Business&quot;,Config(&quot;ManualReviewExpMsg&quot;).ToString,&quot;&quot;,&quot;&quot;}]" DataTable="[dt_SummaryFile]" DisplayName="Add Data Row to Summary data table" sap:VirtualizedContainerService.HintSize="434,226" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </ui:AddDataRow>
                                                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="434,276" sap2010:WorkflowViewState.IdRef="TryCatch_27">
                                                                        <TryCatch.Try>
                                                                          <ui:ReplyToOutlookMailMessage AddBcc="{x:Null}" AddCc="{x:Null}" AddTo="{x:Null}" NewSubject="{x:Null}" ReplyFrom="{x:Null}" TimeoutMS="{x:Null}" Body="[Config(&quot;Email_Reply_Body_YetToCompleted&quot;).ToString.Split(&quot;;&quot;c)(0) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; Config(&quot;Email_Reply_Body_YetToCompleted&quot;).ToString.Split(&quot;;&quot;c)(1).Replace(&quot;{0}&quot;,CurrentRow(&quot;PONumber&quot;).ToString) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; Config(&quot;Mail_SignatureReply&quot;).ToString]" DisplayName="Reply To Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,127" sap2010:WorkflowViewState.IdRef="ReplyToOutlookMailMessage_5" Importance="Normal" MailMessage="[liMm_SentMailMessage(0)]" ReplyAll="False">
                                                                            <ui:ReplyToOutlookMailMessage.Files>
                                                                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                                            </ui:ReplyToOutlookMailMessage.Files>
                                                                          </ui:ReplyToOutlookMailMessage>
                                                                        </TryCatch.Try>
                                                                        <TryCatch.Catches>
                                                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,104" sap2010:WorkflowViewState.IdRef="Catch`1_28">
                                                                            <sap:WorkflowViewStateService.ViewState>
                                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                              </scg:Dictionary>
                                                                            </sap:WorkflowViewStateService.ViewState>
                                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                                              <ActivityAction.Argument>
                                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                              </ActivityAction.Argument>
                                                                            </ActivityAction>
                                                                          </Catch>
                                                                        </TryCatch.Catches>
                                                                      </TryCatch>
                                                                    </Sequence>
                                                                  </ui:IfElseIfBlock.Then>
                                                                </ui:IfElseIfBlock>
                                                              </sc:BindingList>
                                                            </ui:IfElseIf.ConditionBlocks>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:IfElseIf>
                                                          <ui:CommentOut DisplayName="Uncomment, if success column is null" sap:VirtualizedContainerService.HintSize="551,61" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                                                            <ui:CommentOut.Body>
                                                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,240" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <If sap2010:Annotation.AnnotationText="If: Mail retrieve from Inbox folder, moved that mail into Processed folder" Condition="[Not(bln_IsMailFromProcessedFolder)]" sap:VirtualizedContainerService.HintSize="338,118" sap2010:WorkflowViewState.IdRef="If_22">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <Sequence sap:VirtualizedContainerService.HintSize="400,219" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <ui:MoveOutlookMessage Account="{x:Null}" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_2" MailFolder="[Config(&quot;Move_FolderName&quot;).ToString]" MailMessage="[liMm_SentMailMessage(0)]" />
                                                                    </Sequence>
                                                                  </If.Then>
                                                                </If>
                                                              </Sequence>
                                                            </ui:CommentOut.Body>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </ui:CommentOut>
                                                        </Sequence>
                                                      </ActivityAction>
                                                    </ui:ForEachRow.Body>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:ForEachRow>
                                                </Sequence>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="884,21" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                    <ui:LogMessage sap2010:Annotation.AnnotationText="Logging Level - Info" DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,132" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Warn" Message="[&quot;Exception occured in moving\reply mail sequence: &quot; + exception.Message]">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:LogMessage>
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="Writes summary data table to Workbook" DataTable="[dt_summaryfile]" DisplayName="Writes summary data table to Workbook" sap:VirtualizedContainerService.HintSize="918,156" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[Config(&quot;SummaryReportSheetName&quot;).ToString]" WorkbookPath="[config(&quot;SummaryReportFilePath&quot;).ToString]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:WriteRange>
                                            <If Condition="[Not Directory.Exists(Config(&quot;FIJ_NonEDI_COE_SummaryReport_SDFolderPath&quot;).ToString+ &quot;\&quot;)]" sap:VirtualizedContainerService.HintSize="482,474" sap2010:WorkflowViewState.IdRef="If_26">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="400,211" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="338,89" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[Config(&quot;FIJ_NonEDI_COE_SummaryReport_SDFolderPath&quot;).ToString+ &quot;\&quot;]" />
                                                </Sequence>
                                              </If.Then>
                                            </If>
                                            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[Config(&quot;FIJ_NonEDI_COE_SummaryReport_SDFolderPath&quot;).ToString+ &quot;\&quot; + Path.GetFileName(config(&quot;SummaryReportFilePath&quot;).ToString)]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="482,163" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[config(&quot;SummaryReportFilePath&quot;).ToString]" />
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Sends final mail to SME, with summary report" DisplayName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="482,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_52" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Server_Type">[Config("ServerType").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Mail_Operation_Type">[Config("MailOperationType").ToString.Split(","c)(1)]</InArgument>
                                                <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_MailMessages" />
                                                <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email_Message" />
                                                <OutArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="out_Attachments_List" />
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_isDefault_Account">False</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Email_Body">[config("Email_Body_Success").ToString.Split(";"c)(0) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; config("Email_Body_Success").ToString.Split(";"c)(1).Replace("{0}",Now.ToString("dd-MM-yyyy HH:mm:ss")) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Mail_Signature").ToString.Replace("&lt;RobotID&gt;",str_EnvironmentDomainName+"\"+str_EnvironmentUsername)]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Recepients_Type">[Config("MailRecepientsType").ToString.Split(";"c)(2)]</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsBody_HTML">True</InArgument>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAutodiscover_Enabled" />
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsMailFilter" />
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Subject">[Config("Email_Subject_Success").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_FromAddress">[Config("OutlookAccountName").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[Config("SuccessNotificationMailsCC").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[Config("SuccessNotificationMailsTo").ToString]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_BusinessAttachmentPath" />
                                                <InArgument x:TypeArguments="x:String" x:Key="in_LogMessageID" />
                                                <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Arr_Attachments">[{config("SummaryReportFilePath").ToString}]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="482,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[Config("SC-LM-0018").ToString.Replace("{0}",Config("SuccessNotificationMailsTo").ToString)]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">End Process State</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Info</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">SC-LM-0018</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="585,997" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[SystemException is Nothing AndAlso BusinessException is Nothing]" sap:VirtualizedContainerService.HintSize="523,875" sap2010:WorkflowViewState.IdRef="If_28">
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="441,599" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_66" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[tuple_Config("EX-LBM-NEDI-0002").Item2]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">End Process</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">EX-LBM-NEDI-0002</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[Config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Sends final mail to SME." DisplayName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_67" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Mail_Wrapper.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Server_Type">[Config("ServerType").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Mail_Operation_Type">[Config("MailOperationType").ToString.Split(","c)(1)]</InArgument>
                                                      <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_MailMessages" />
                                                      <InArgument x:TypeArguments="snm:MailMessage" x:Key="in_Email_Message" />
                                                      <OutArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="out_Attachments_List" />
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_isDefault_Account">False</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Email_Body">[config("Email_Body_NoMailFound").ToString.Split(";"c)(0) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; config("Email_Body_NoMailFound").ToString.Split(";"c)(1).Replace("{0}",Now.ToString("dd-MM-yyyy HH:mm:ss")) &amp; "&lt;BR&gt;" &amp; "&lt;BR&gt;" &amp; Config("Mail_Signature").ToString.Replace("&lt;RobotID&gt;",str_EnvironmentDomainName+"\"+str_EnvironmentUsername)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Recepients_Type">[Config("MailRecepientsType").ToString.Split(";"c)(2)]</InArgument>
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsBody_HTML">True</InArgument>
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAutodiscover_Enabled" />
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsMailFilter" />
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Subject">[Config("Email_Subject_NoData").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_FromAddress">[Config("OutlookAccountName").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_CCAddress">[Config("SuccessNotificationMailsCC").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_ToAddress">[Config("SuccessNotificationMailsTo").ToString]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_BusinessAttachmentPath" />
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_LogMessageID" />
                                                      <InArgument x:TypeArguments="scg:IEnumerable(x:String)" x:Key="in_Arr_Attachments">[{""}]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_68" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[Config("SC-LM-0031").ToString.Replace("{0}",Config("SuccessNotificationMailsTo").ToString)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">End Process State</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Info</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">SC-LM-0031</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="671,21" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Warn" Message="[&quot;Exception occured at end process: &quot;+exception.Message]" />
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                    <TryCatch.Finally>
                                      <TryCatch DisplayName="Try to close all aplications" sap:VirtualizedContainerService.HintSize="225,61" sap2010:WorkflowViewState.IdRef="TryCatch_23">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence sap:VirtualizedContainerService.HintSize="400,406" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_63" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow (End process)" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_64" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="s:String[]" x:Key="arr_killallprocess">[Config("KillAllProcessNames").ToString.Split(","c)]</InArgument>
                                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_config">[Config]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Failed to close applications, so kill processes" sap:VirtualizedContainerService.HintSize="400,385" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log message (Failed to close applications)" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Warn" Message="[&quot;Applications failed to close gracefully. &quot;+Exception.Message+&quot; at Source: &quot;+Exception.Source]" />
                                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow (End process)" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_65" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="s:String[]" x:Key="arr_killallprocess">[Config("KillAllProcessNames").ToString.Split(","c)]</InArgument>
                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_config">[Config]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                              </Sequence>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </TryCatch.Finally>
                                  </TryCatch>
                                </Sequence>
                              </State.Entry>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">18,208</av:Point>
                                  <av:Size x:Key="ShapeSize">144,129</av:Size>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Double x:Key="StateContainerWidth">110</x:Double>
                                  <x:Double x:Key="StateContainerHeight">26</x:Double>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <State.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="bln_IsMailFromProcessedFolder" />
                                <Variable x:TypeArguments="x:String" Name="str_ReceivedDateTime" />
                                <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="liMm_SentMailMessage" />
                                <Variable x:TypeArguments="x:Int32" Name="int_SummaryFilePORowIndex" />
                              </State.Variables>
                            </State>
                          </Transition.To>
                          <Transition.Action>
                            <ui:LogMessage DisplayName="Log Message (initialization failure)" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Error" Message="[&quot;System exception at initialization: &quot; + SystemException.Message + &quot; at Source: &quot; + SystemException.Source]" />
                          </Transition.Action>
                          <Transition.Condition>[SystemException isNot Nothing or bln_NoFolderData]</Transition.Condition>
                        </Transition>
                      </State.Transitions>
                      <State.Variables>
                        <Variable x:TypeArguments="x:String" Name="Save_ScreenShotPath" />
                        <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
                      </State.Variables>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="Business Rule Exception" DisplayName="Business Exception" sap:VirtualizedContainerService.HintSize="448.8,537.6" sap2010:WorkflowViewState.IdRef="Transition_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">361.383333333333,637.666666666667 361.383333333333,667.666666666667 505.33333333333303,667.666666666667 505.33333333333303,248.933333333333 475.33333333333303,248.933333333333</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[BusinessException IsNot Nothing]</Transition.Condition>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="There is no need for any action in case of successful transaction.&#xA;The process should simply go to next transaction." DisplayName="Success" sap:VirtualizedContainerService.HintSize="452,553.6" sap2010:WorkflowViewState.IdRef="Transition_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">407.58333333333303,637.666666666667 407.58333333333303,657.733333333333 505.33333333333303,657.733333333333 505.33333333333303,297.733333333333 475.33333333333303,297.733333333333</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>[SystemException Is Nothing And BusinessException is Nothing]</Transition.Condition>
                </Transition>
              </State.Transitions>
              <State.Variables>
                <Variable x:TypeArguments="snm:MailMessage" Name="mail_message" />
              </State.Variables>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message (New transaction retrieved)" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
          </Transition.Action>
          <Transition.Condition>[TransactionItem IsNot Nothing]</Transition.Condition>
        </Transition>
        <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap:VirtualizedContainerService.HintSize="429.6,969.6" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">349.83333333333303,334.33333333333303 349.83333333333303,364.33333333333303 90,364.33333333333303 90,337</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">39</x:Int32>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <x:Reference>__ReferenceID1</x:Reference>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message (No more transations available)" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
          </Transition.Action>
          <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Transaction item to be processed. The type of this variable can be changed to match the transaction type in the process. For example, when processing data from a spreadsheet that is read into a DataTable, this type can be changed to DataRow. " Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" sap2010:Annotation.AnnotationText="Used during transitions between states to represent exceptions other than business exceptions." Name="SystemException" />
      <Variable x:TypeArguments="ui:BusinessRuleException" sap2010:Annotation.AnnotationText="Used during transitions between states and represents a situation that does not conform to the rules of the process being automated." Name="BusinessException" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Sequential counter of transaction items." Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="Config" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of attempts of retrying the transaction processing in case of system exceptions." Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Optionally used to include additional information about the transaction item." Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Transaction ID used for information and logging purposes. Ideally, the ID should be unique for each transaction. " Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" sap2010:Annotation.AnnotationText="Used in case transactions are stored in a DataTable, for example, after being retrieved from a spreadsheet." Name="dt_TransactionData" />
      <Variable x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Used to control the number of consecutive system exceptions." Default="0" Name="ConsecutiveSystemExceptions" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_vendorfile" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_summaryfile" />
      <Variable x:TypeArguments="x:String" Name="str_startdatetime" />
      <Variable x:TypeArguments="x:String" Name="str_enddatetime" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" Name="tuple_config" />
      <Variable x:TypeArguments="s:String[]" Name="arr_SIngularityOutputFiles" />
      <Variable x:TypeArguments="x:Boolean" Name="bln_NoFolderData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_MailStatusDataTable" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="intRetryCounter" />
      <Variable x:TypeArguments="x:String" Name="str_EnvironmentUsername" />
      <Variable x:TypeArguments="x:String" Name="str_EnvironmentDomainName" />
      <Variable x:TypeArguments="x:Object" Name="objPythonReturn" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_locationfile" />
      <Variable x:TypeArguments="x:Int32" Name="int_MailCounter" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>