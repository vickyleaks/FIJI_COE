<Activity mc:Ignorable="sap sap2010" x:Class="RPA_Core_Mail_Notifier" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System.Diagnostics.Process" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umla="clr-namespace:UiPath.Mail.LotusNotes.Activities;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Can be Outlook, SMTP, POP3, IMAP, Exchange, Lotus Notes" Name="in_Server_Type" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="To signify the Mail Operation - Read Mail, Send Mail, Delete Mail, Move Mail, or Save Attachments" Name="in_Mail_Operation_Type" Type="InArgument(x:String)" />
    <x:Property Name="out_MailMessages" Type="OutArgument(scg:List(snm:MailMessage))" />
    <x:Property sap2010:Annotation.AnnotationText="Mail Message to be Moved/Deleted or to Save its corresponding Attachments" Name="in_Email_Message" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="out_Attachments_List" Type="OutArgument(scg:IEnumerable(x:String))" />
    <x:Property Name="in_isDefault_Account" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Mail Body Dynamic Message to be passed while sending any Mail" Name="in_Email_Body" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="It can be Exception/Business/Technical mails" Name="in_Recepients_Type" Type="InArgument(x:String)" />
    <x:Property Name="in_IsBody_HTML" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="To Signify if we need to use Exchange server name in Exchange Activites or use Server Autodiscover fucntionality of Exchange activities" Name="in_IsAutodiscover_Enabled" Type="InArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Filter while Fething Mails using Get Mail Messages Activity" Name="in_IsMailFilter" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_Subject" Type="InArgument(x:String)" />
    <x:Property Name="in_FromAddress" Type="InArgument(x:String)" />
    <x:Property Name="in_CCAddress" Type="InArgument(x:String)" />
    <x:Property Name="in_ToAddress" Type="InArgument(x:String)" />
    <x:Property Name="in_BusinessAttachmentPath" Type="InArgument(x:String)" />
    <x:Property Name="in_LogMessageID" Type="InArgument(x:String)" />
    <x:Property Name="in_Arr_Attachments" Type="InArgument(scg:IEnumerable(x:String))" />
  </x:Members>
  <this:RPA_Core_Mail_Notifier.in_LogMessageID>
    <InArgument x:TypeArguments="x:String" />
  </this:RPA_Core_Mail_Notifier.in_LogMessageID>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>960,990</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>RPA_Core_Mail_Notifier_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="50">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="102">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Flowchart sap2010:Annotation.AnnotationText="The Below Wrapper Is Created To Send, Read, Move and Delete Mails Based Upon the Server Used.&#xA;Also it can ce be used to Save Attachments into the required folder. &#xA;The Servers Used can be SMTP, IMAP, POP3, Exchange, Lotus Notes or Outlook&#xA;Need to provide the necessary input arguments in order to use the respective Server to send mail&#xA;Some of the useful arguments are -&#xA;is Mail Body HTML - If the body of the mail is HTML&#xA;Attachments Path - Directory Path if there is any attachment present to be sent along with mail&#xA;Mail Recepient Type - To confirm the type of Mail Recepients - Business Team Recepients, Technical Team Recepients, Excepti on Mails Recepients (Mail IDs)" DisplayName="RPA_Core_Mail_Wrapper" sap:VirtualizedContainerService.HintSize="724,925" sap2010:WorkflowViewState.IdRef="Flowchart_2">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sco:Collection(sd:Process)" sap2010:Annotation.AnnotationText="Used to Check if Outlook is already running for the Current User Session or Not" Name="Process_List" />
      <Variable x:TypeArguments="s:String[]" Name="Attachments_Path" />
      <Variable x:TypeArguments="x:Boolean" Name="is_Email_Valid" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Used to signify Email Account used to Read, Send, Move Mail or Save Attachments for Exchange, IMAP or POP3 Servers" Name="LDAP_Email_Address" />
      <Variable x:TypeArguments="s:IntPtr" Name="Pass_LDAP" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Used to signify Email Account Password used to Read, Send, Move Mail or Save Attachments for Exchange, IMAP or POP3 Servers" Name="Password_LDAP" />
      <Variable x:TypeArguments="ss:SecureString" Name="LDAP_Password" />
      <Variable x:TypeArguments="ss:SecureString" Name="Password_Notes" />
      <Variable x:TypeArguments="s:IntPtr" Name="Pass_Notes" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Used to signify Lotus Notes Password used to Read, Send, Move Mail or Save Attachments for Lotus Notes Server" Name="Notes_Password" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">310,0</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">340,74.6666666666667 340,126.666666666667</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Double x:Key="Width">690</x:Double>
        <x:Double x:Key="Height">732.02</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID9</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">0,238.333333333333</av:Point>
          <av:Size x:Key="ShapeSize">200,92</av:Size>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Send Mail" DisplayName="Switch" Expression="[in_Server_Type.ToLower]" sap:VirtualizedContainerService.HintSize="948,4055" sap2010:WorkflowViewState.IdRef="Switch`1_24">
        <Switch.Default>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Either Not Configured Or Not Supported By Uipath", in_Server_Type)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type" />
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID" />
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </Switch.Default>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence x:Key="outlook" DisplayName="Outlook Actions" sap:VirtualizedContainerService.HintSize="908,3764" sap2010:WorkflowViewState.IdRef="Sequence_101">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[in_Recepients_Type.ToLower]" sap:VirtualizedContainerService.HintSize="846,3642" sap2010:WorkflowViewState.IdRef="Switch`1_34">
            <Switch.Default>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Is Not A Valid Recepient Type To Send Mail", in_Recepients_Type)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Error</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Switch.Default>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence x:Key="success mails" DisplayName="Success" sap:VirtualizedContainerService.HintSize="806,3404" sap2010:WorkflowViewState.IdRef="Sequence_148">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="744,69" sap2010:WorkflowViewState.IdRef="IsMatch_59" Input="[in_FromAddress]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:IsMatch>
              <If Condition="[is_Email_Valid]" DisplayName="If_Email Valid" sap:VirtualizedContainerService.HintSize="744,3173" sap2010:WorkflowViewState.IdRef="If_323">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" DisplayName="If_Config has no attachment value  " sap:VirtualizedContainerService.HintSize="662,2766" sap2010:WorkflowViewState.IdRef="If_322">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If Condition="[in_IsBody_HTML]" DisplayName="If_Email with HTML Content" sap:VirtualizedContainerService.HintSize="580,2008" sap2010:WorkflowViewState.IdRef="If_318">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <If Condition="[in_isDefault_Account]" DisplayName="If_Default Account" sap:VirtualizedContainerService.HintSize="498,736" sap2010:WorkflowViewState.IdRef="If_316">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <If Condition="[string.IsNullOrEmpty(in_BusinessAttachmentPath)]" DisplayName="If_Check for business attachment" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="If_340">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_203" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" TimeoutMS="[CInt(in_Config(&quot;Outlook_TimeOut&quot;))]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Then>
                                <If.Else>
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_179" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" TimeoutMS="[CInt(in_Config(&quot;Outlook_TimeOut&quot;))]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String">[in_BusinessAttachmentPath]</InArgument>
                                      </scg:List>
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Else>
                              </If>
                            </If.Then>
                            <If.Else>
                              <If Condition="[string.IsNullOrEmpty(in_BusinessAttachmentPath) and in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray.Count = 0]" DisplayName="If_Check for business attachment" sap:VirtualizedContainerService.HintSize="416,473" sap2010:WorkflowViewState.IdRef="If_341">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" Account="[in_FromAddress]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendOutlookMail_204" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" TimeoutMS="[CInt(in_Config(&quot;Outlook_TimeOut&quot;))]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Then>
                                <If.Else>
                                  <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" Account="[in_FromAddress]" AttachmentsCollection="[in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendOutlookMail_205" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" TimeoutMS="[CInt(in_Config(&quot;Outlook_TimeOut&quot;))]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String" />
                                      </scg:List>
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </If.Then>
                        <If.Else>
                          <If Condition="[in_isDefault_Account]" DisplayName="If_Email without HTML Content" sap:VirtualizedContainerService.HintSize="498,1109" sap2010:WorkflowViewState.IdRef="If_317">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <If Condition="[string.IsNullOrEmpty(in_BusinessAttachmentPath)]" DisplayName="If_Check for business attachment" sap:VirtualizedContainerService.HintSize="416,473" sap2010:WorkflowViewState.IdRef="If_342">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" AttachmentsCollection="[in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendOutlookMail_206" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" TimeoutMS="[CInt(in_Config(&quot;Outlook_TimeOut&quot;))]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Then>
                                <If.Else>
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" AttachmentsCollection="[in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendOutlookMail_207" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" TimeoutMS="[CInt(in_Config(&quot;Outlook_TimeOut&quot;))]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String" />
                                      </scg:List>
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Else>
                              </If>
                            </If.Then>
                            <If.Else>
                              <If Condition="[string.IsNullOrEmpty(in_BusinessAttachmentPath)]" DisplayName="If_Check for business attachment" sap:VirtualizedContainerService.HintSize="416,473" sap2010:WorkflowViewState.IdRef="If_343">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" Account="[in_FromAddress]" AttachmentsCollection="[in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendOutlookMail_208" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" TimeoutMS="[CInt(in_Config(&quot;Outlook_TimeOut&quot;))]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Then>
                                <If.Else>
                                  <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" Account="[in_FromAddress]" AttachmentsCollection="[in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendOutlookMail_209" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" TimeoutMS="[CInt(in_Config(&quot;Outlook_TimeOut&quot;))]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String" />
                                      </scg:List>
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Config has attachment value  " sap:VirtualizedContainerService.HintSize="400,595" sap2010:WorkflowViewState.IdRef="Sequence_147">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_77">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[in_IsBody_HTML]" DisplayName="if_Email with HTML Content" sap:VirtualizedContainerService.HintSize="338,363" sap2010:WorkflowViewState.IdRef="If_321">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <If Condition="[in_isDefault_Account]" DisplayName="If_Default Account" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="If_319">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_183" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" To="[in_ToAddress]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Then>
                              <If.Else>
                                <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_FromAddress]" AttachmentsCollection="[Attachments_Path]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_184" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" To="[in_ToAddress]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Else>
                            </If>
                          </If.Then>
                          <If.Else>
                            <If Condition="[in_isDefault_Account]" DisplayName="If_Email without HTML Content" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="If_320">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_185" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" To="[in_ToAddress]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Then>
                              <If.Else>
                                <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_FromAddress]" AttachmentsCollection="[Attachments_Path]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_186" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" To="[in_ToAddress]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Add Log Message" sap:VirtualizedContainerService.HintSize="441,244" sap2010:WorkflowViewState.IdRef="Sequence_153">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Config(in_LogMessageID).ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_Config("Success_ LogTypeMessages").ToString.Split(","c)(1)]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[in_LogMessageID]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence x:Key="business mails" DisplayName="Business/Application" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_150">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="744,69" sap2010:WorkflowViewState.IdRef="IsMatch_60" Input="[in_FromAddress]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:IsMatch>
              <If Condition="[is_Email_Valid]" DisplayName="If_Email Valid" sap:VirtualizedContainerService.HintSize="744,1525" sap2010:WorkflowViewState.IdRef="If_331">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" DisplayName="If_Config has no attachment value" sap:VirtualizedContainerService.HintSize="662,1262" sap2010:WorkflowViewState.IdRef="If_330">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If Condition="[in_IsBody_HTML]" DisplayName="If_Email with HTML Content" sap:VirtualizedContainerService.HintSize="580,999" sap2010:WorkflowViewState.IdRef="If_326">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <If Condition="[in_isDefault_Account]" DisplayName="If_Default Account" sap:VirtualizedContainerService.HintSize="498,736" sap2010:WorkflowViewState.IdRef="If_324">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <If Condition="[string.IsNullOrEmpty(in_BusinessAttachmentPath)]" DisplayName="If_Check for business attachment" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="If_344">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="SendOutlookMail_210" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String" />
                                      </scg:List>
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Then>
                                <If.Else>
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="SendOutlookMail_211" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                        <InArgument x:TypeArguments="x:String" />
                                      </scg:List>
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Else>
                              </If>
                            </If.Then>
                            <If.Else>
                              <If Condition="[string.IsNullOrEmpty(in_BusinessAttachmentPath) and in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray.Count = 0]" DisplayName="If_Check for business attachment" sap:VirtualizedContainerService.HintSize="416,473" sap2010:WorkflowViewState.IdRef="If_346">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_FromAddress]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendOutlookMail_215" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Then>
                                <If.Else>
                                  <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_FromAddress]" AttachmentsCollection="[in_Arr_Attachments.Where(Function(x) Not String.IsNullOrWhiteSpace(x)).ToArray]" Body="[in_Email_Body]" Cc="[in_CCAddress]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="SendOutlookMail_216" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Subject]" To="[in_ToAddress]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                </If.Else>
                              </If>
                            </If.Else>
                          </If>
                        </If.Then>
                        <If.Else>
                          <If Condition="[in_isDefault_Account]" DisplayName="If_Email without HTML Content" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="If_325">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="SendOutlookMail_189" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Business_Mails_Subject&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                            </If.Then>
                            <If.Else>
                              <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_Config(&quot;BusinessNotification_Mails_From&quot;).ToString]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="SendOutlookMail_190" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Business_Mails_Subject&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Config has attachment value  " sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_149">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_78">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[in_IsBody_HTML]" DisplayName="If_Email with HTML content" sap:VirtualizedContainerService.HintSize="338,363" sap2010:WorkflowViewState.IdRef="If_329">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <If Condition="[in_isDefault_Account]" DisplayName="If_Default Account" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="If_327">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_191" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Business_Mails_Subject&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Then>
                              <If.Else>
                                <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_Config(&quot;BusinessNotification_Mails_From&quot;).ToString]" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_192" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Business_Mails_Subject&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Else>
                            </If>
                          </If.Then>
                          <If.Else>
                            <If Condition="[in_isDefault_Account]" DisplayName="If_Email without HTML content" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="If_328">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_193" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Business_Mails_Subject&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Then>
                              <If.Else>
                                <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_Config(&quot;BusinessNotification_Mails_From&quot;).ToString]" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="SendOutlookMail_194" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Business_Mails_Subject&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Add Log Message" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_154">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="379,60" sap2010:WorkflowViewState.IdRef="Assign_81">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[in_LogMessageID]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">SC-LM-0004</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Config(in_LogMessageID).ToString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_Config("Success_ LogTypeMessages").ToString.Split(","c)(1)]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[in_LogMessageID]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence x:Key="technical mails" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_152">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="IsMatch_61" Input="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]" />
              <If Condition="[is_Email_Valid]" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="If_339">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="498,1082" sap2010:WorkflowViewState.IdRef="If_338">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="416,626" sap2010:WorkflowViewState.IdRef="If_334">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <If Condition="[in_isDefault_Account]" sap:VirtualizedContainerService.HintSize="334,363" sap2010:WorkflowViewState.IdRef="If_332">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="SendOutlookMail_195" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                            </If.Then>
                            <If.Else>
                              <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="SendOutlookMail_196" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                            </If.Else>
                          </If>
                        </If.Then>
                        <If.Else>
                          <If Condition="[in_isDefault_Account]" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="If_333">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendOutlookMail_197" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                            </If.Then>
                            <If.Else>
                              <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendOutlookMail_198" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                            </If.Else>
                          </If>
                        </If.Else>
                      </If>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,293" sap2010:WorkflowViewState.IdRef="Sequence_151">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_79">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="If_337">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <If Condition="[in_isDefault_Account]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_335">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendOutlookMail_199" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Then>
                              <If.Else>
                                <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendOutlookMail_200" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Else>
                            </If>
                          </If.Then>
                          <If.Else>
                            <If Condition="[in_isDefault_Account]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_336">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendOutlookMail_201" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Then>
                              <If.Else>
                                <ui:SendOutlookMail Bcc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendOutlookMail_202" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                                  <ui:SendOutlookMail.Files>
                                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                  </ui:SendOutlookMail.Files>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SendOutlookMail>
                              </If.Else>
                            </If>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">From Recepient Mail ID For Technical Mails Not Valid</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Error</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </If.Else>
              </If>
            </Sequence>
          </Switch>
        </Sequence>
        <x:Null x:Key="exchange" />
        <Switch x:TypeArguments="x:String" x:Key="smtp" DisplayName="Switch" Expression="[in_Recepients_Type.ToLower]" sap:VirtualizedContainerService.HintSize="497,192" sap2010:WorkflowViewState.IdRef="Switch`1_22">
          <Switch.Default>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Is Not A Valid Recepient Type To Send Mail", in_Recepients_Type)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Error</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
          </Switch.Default>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence x:Key="applicationexception mails" sap:VirtualizedContainerService.HintSize="873,872" sap2010:WorkflowViewState.IdRef="Sequence_110">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="811,69" sap2010:WorkflowViewState.IdRef="IsMatch_47" Input="[in_Config(&quot;ApplicationExceptionMailsFrom&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:IsMatch>
            <If Condition="[is_Email_Valid]" sap:VirtualizedContainerService.HintSize="811,609" sap2010:WorkflowViewState.IdRef="If_236">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="729,346" sap2010:WorkflowViewState.IdRef="If_235">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="484,203" sap2010:WorkflowViewState.IdRef="If_233">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[in_Email_Body.ToString.Split(&quot;;&quot;c)(0) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body.ToString.Split(&quot;;&quot;c)(1) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;Mail_Signature&quot;).ToString.Split(&quot;;&quot;c)(0) &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;Mail_Signature&quot;).ToString.Split(&quot;;&quot;c)(1) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;Mail_Signature&quot;).ToString.Split(&quot;;&quot;c)(2)]" Cc="[in_Config(&quot;ApplicationExceptionMailsCC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;ApplicationExceptionMailsFrom&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,49" sap2010:WorkflowViewState.IdRef="SendMail_62" IgnoreCRL="False" IsBodyHtml="True" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot;  ApplicationException Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_Application&quot;).ToString.Replace(&quot;[Process Name] &quot;,in_Config(&quot;logF_BusinessProcessName&quot;).ToString)]" To="[in_Config(&quot;ApplicationExceptionMailsTo&quot;).ToString]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String">[in_BusinessAttachmentPath]</InArgument>
                            </scg:List>
                          </ui:SendMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendMail>
                      </If.Then>
                      <If.Else>
                        <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;ExceptionMailsFrom&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,49" sap2010:WorkflowViewState.IdRef="SendMail_63" IgnoreCRL="False" IsBodyHtml="False" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_Application&quot;).ToString]" To="[in_Config(&quot;ApplicationExceptionMailsTo&quot;).ToString]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String">[in_BusinessAttachmentPath]</InArgument>
                            </scg:List>
                          </ui:SendMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendMail>
                      </If.Else>
                    </If>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="200,62" sap2010:WorkflowViewState.IdRef="Sequence_109">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_54">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="262,49" sap2010:WorkflowViewState.IdRef="If_234">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;ExceptionMailsFrom&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,143" sap2010:WorkflowViewState.IdRef="SendMail_64" IgnoreCRL="False" IsBodyHtml="True" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Exception Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_Fail&quot;).ToString]" To="[in_Config(&quot;ExceptionMailsTo&quot;).ToString]">
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendMail>
                        </If.Then>
                        <If.Else>
                          <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;ExceptionMailsFrom&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,143" sap2010:WorkflowViewState.IdRef="SendMail_65" IgnoreCRL="False" IsBodyHtml="False" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Exception Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_Fail&quot;).ToString]" To="[in_Config(&quot;ExceptionMailsTo&quot;).ToString]">
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendMail>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Then>
              <If.Else>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,49" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level">Error</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">From Recepient Mail ID For Exception Mails Not Valid</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
              </If.Else>
            </If>
          </Sequence>
          <Sequence x:Key="business mails" sap:VirtualizedContainerService.HintSize="1268,874" sap2010:WorkflowViewState.IdRef="Sequence_112">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="1206,69" sap2010:WorkflowViewState.IdRef="IsMatch_48" Input="[in_Config(&quot;BusinessNotification_Mails_From&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:IsMatch>
            <If Condition="[is_Email_Valid]" sap:VirtualizedContainerService.HintSize="1206,611.333333333333" sap2010:WorkflowViewState.IdRef="If_240">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="960,457.333333333333" sap2010:WorkflowViewState.IdRef="If_239">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="714,303.333333333333" sap2010:WorkflowViewState.IdRef="If_237">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[in_Email_Body.ToString.Split(&quot;;&quot;c)(0) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body.ToString.Split(&quot;;&quot;c)(1) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;Mail_Signature&quot;).ToString.Split(&quot;;&quot;c)(0) &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;Mail_Signature&quot;).ToString.Split(&quot;;&quot;c)(1) &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;Mail_Signature&quot;).ToString.Split(&quot;;&quot;c)(2)]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;BusinessNotification_Mails_From&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendMail_66" IgnoreCRL="False" IsBodyHtml="True" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Business Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_config(&quot;Email_Subject_Success&quot;).ToString.Replace(&quot;Process Name&quot;,in_config(&quot;logF_BusinessProcessName&quot;).ToString)]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String">[in_BusinessAttachmentPath]</InArgument>
                            </scg:List>
                          </ui:SendMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendMail>
                      </If.Then>
                      <If.Else>
                        <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;BusinessNotification_Mails_From&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendMail_67" IgnoreCRL="False" IsBodyHtml="False" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Business Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_Success&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String">[in_BusinessAttachmentPath]</InArgument>
                            </scg:List>
                          </ui:SendMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendMail>
                      </If.Else>
                    </If>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="200,62" sap2010:WorkflowViewState.IdRef="Sequence_111">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,59" sap2010:WorkflowViewState.IdRef="Assign_55">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="262,49" sap2010:WorkflowViewState.IdRef="If_238">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;BusinessNotification_Mails_From&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,49" sap2010:WorkflowViewState.IdRef="SendMail_68" IgnoreCRL="False" IsBodyHtml="True" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Business Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_Success&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendMail>
                        </If.Then>
                        <If.Else>
                          <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;BusinessNotification_Mails_From&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,49" sap2010:WorkflowViewState.IdRef="SendMail_69" IgnoreCRL="False" IsBodyHtml="False" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Business Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_Success&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendMail>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Then>
              <If.Else>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,49" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level">Error</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">From Recepient Mail ID For Business Mails Not Valid</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
              </If.Else>
            </If>
          </Sequence>
          <Sequence x:Key="technical mails" sap:VirtualizedContainerService.HintSize="1265,815" sap2010:WorkflowViewState.IdRef="Sequence_114">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="1203,49" sap2010:WorkflowViewState.IdRef="IsMatch_49" Input="[in_Config(&quot;ExceptionMailsFrom&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]" />
            <If Condition="[is_Email_Valid]" sap:VirtualizedContainerService.HintSize="1203,572" sap2010:WorkflowViewState.IdRef="If_244">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="958,429" sap2010:WorkflowViewState.IdRef="If_243">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="713,286" sap2010:WorkflowViewState.IdRef="If_241">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,143" sap2010:WorkflowViewState.IdRef="SendMail_70" IgnoreCRL="False" IsBodyHtml="True" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Business Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                          </ui:SendMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendMail>
                      </If.Then>
                      <If.Else>
                        <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" sap:VirtualizedContainerService.HintSize="334,143" sap2010:WorkflowViewState.IdRef="SendMail_71" IgnoreCRL="False" IsBodyHtml="True" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Business Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                          </ui:SendMail.Files>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:SendMail>
                      </If.Else>
                    </If>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="200,62" sap2010:WorkflowViewState.IdRef="Sequence_113">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_56">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="262,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_242">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendMail_72" IgnoreCRL="False" IsBodyHtml="True" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Business Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendMail>
                        </If.Then>
                        <If.Else>
                          <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[in_Config(&quot;TechnicalNotification_Mails_From&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendMail_73" IgnoreCRL="False" IsBodyHtml="True" Name="[&quot;Robotic ID : &quot; &amp; Environment.UserName &amp; &quot; Business Mails Notification&quot;]" Port="[Convert.ToInt32(in_Config(&quot;SMTP_Port_Number&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;SMTP_Server_Name&quot;).ToString]" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                            <ui:SendMail.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </ui:SendMail.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:SendMail>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Else>
                </If>
              </If.Then>
              <If.Else>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,49" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level">Error</InArgument>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">From Recepient Mail ID For Technical Mails Not Valid</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
              </If.Else>
            </If>
          </Sequence>
        </Switch>
        <Sequence x:Key="lotus notes" sap:VirtualizedContainerService.HintSize="400,496" sap2010:WorkflowViewState.IdRef="Sequence_121">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[in_Config(&quot;RPA_Lotus_Notes_Credentials&quot;).ToString]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="GetRobotCredential_5" Password="[Password_Notes]" />
          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_57">
            <Assign.To>
              <OutArgument x:TypeArguments="s:IntPtr">[Pass_Notes]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:IntPtr">[Marshal.SecureStringToGlobalAllocUnicode(Password_Notes)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_58">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Notes_Password]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Marshal.PtrToStringUni(Pass_Notes)]</InArgument>
            </Assign.Value>
          </Assign>
          <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[in_Recepients_Type.ToLower]" sap:VirtualizedContainerService.HintSize="262,52.6666666666667" sap2010:WorkflowViewState.IdRef="Switch`1_23">
            <Switch.Default>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Is Not A Valid Recepient Type To Send Mail", in_Recepients_Type)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Error</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Switch.Default>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence x:Key="exception mails" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_116">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="IsMatch_50" Input="[in_Config(&quot;ExceptionMailsFrom&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]" />
              <If Condition="[is_Email_Valid]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_248">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_247">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_245">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_14" IsBodyHtml="True" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_Fail&quot;).ToString]" To="[in_Config(&quot;ExceptionMailsTo&quot;).ToString]">
                            <umla:SendLotusNotesMailMessage.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </umla:SendLotusNotesMailMessage.Files>
                          </umla:SendLotusNotesMailMessage>
                        </If.Then>
                        <If.Else>
                          <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_15" IsBodyHtml="False" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_Fail&quot;).ToString]" To="[in_Config(&quot;ExceptionMailsTo&quot;).ToString]">
                            <umla:SendLotusNotesMailMessage.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </umla:SendLotusNotesMailMessage.Files>
                          </umla:SendLotusNotesMailMessage>
                        </If.Else>
                      </If>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_115">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_59">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="262,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_246">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_16" IsBodyHtml="True" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_Fail&quot;).ToString]" To="[in_Config(&quot;ExceptionMailsTo&quot;).ToString]">
                              <umla:SendLotusNotesMailMessage.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </umla:SendLotusNotesMailMessage.Files>
                            </umla:SendLotusNotesMailMessage>
                          </If.Then>
                          <If.Else>
                            <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;ExceptionMailsCC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_17" IsBodyHtml="False" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_Fail&quot;).ToString]" To="[in_Config(&quot;ExceptionMailsTo&quot;).ToString]">
                              <umla:SendLotusNotesMailMessage.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </umla:SendLotusNotesMailMessage.Files>
                            </umla:SendLotusNotesMailMessage>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level">Error</InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">From Recepient Mail ID For Exception Mails Not Valid</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </If.Else>
              </If>
            </Sequence>
            <Sequence x:Key="business mails" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_118">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="IsMatch_51" Input="[in_Config(&quot;ExceptionMailsFrom&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]" />
              <If Condition="[is_Email_Valid]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_252">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_251">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_249">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_18" IsBodyHtml="True" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_Success&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                            <umla:SendLotusNotesMailMessage.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </umla:SendLotusNotesMailMessage.Files>
                          </umla:SendLotusNotesMailMessage>
                        </If.Then>
                        <If.Else>
                          <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_19" IsBodyHtml="False" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_Success&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                            <umla:SendLotusNotesMailMessage.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </umla:SendLotusNotesMailMessage.Files>
                          </umla:SendLotusNotesMailMessage>
                        </If.Else>
                      </If>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_117">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_60">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="262,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_250">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_20" IsBodyHtml="True" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_Success&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                              <umla:SendLotusNotesMailMessage.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </umla:SendLotusNotesMailMessage.Files>
                            </umla:SendLotusNotesMailMessage>
                          </If.Then>
                          <If.Else>
                            <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;BusinessNotification_Mails_CC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="334,149.333333333333" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_21" IsBodyHtml="False" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_Success&quot;).ToString]" To="[in_Config(&quot;BusinessNotification_Mails_To&quot;).ToString]">
                              <umla:SendLotusNotesMailMessage.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </umla:SendLotusNotesMailMessage.Files>
                            </umla:SendLotusNotesMailMessage>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level">Error</InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">From Recepient Mail ID For Business Mails Not Valid</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </If.Else>
              </If>
            </Sequence>
            <Sequence x:Key="technical mails" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_120">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="IsMatch_52" Input="[in_Config(&quot;ExceptionMailsFrom&quot;).ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]" />
              <If Condition="[is_Email_Valid]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_256">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Path&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_255">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_253">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_22" IsBodyHtml="True" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                            <umla:SendLotusNotesMailMessage.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </umla:SendLotusNotesMailMessage.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </umla:SendLotusNotesMailMessage>
                        </If.Then>
                        <If.Else>
                          <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_23" IsBodyHtml="False" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                            <umla:SendLotusNotesMailMessage.Files>
                              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                            </umla:SendLotusNotesMailMessage.Files>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </umla:SendLotusNotesMailMessage>
                        </If.Else>
                      </If>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_119">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_61">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:String[]">[Attachments_Path]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:String[]">[in_Config("Attachments_Path").ToString.Split(",".ToCharArray)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[in_IsBody_HTML]" sap:VirtualizedContainerService.HintSize="262,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_254">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; &quot;&lt;BR&gt;&quot; &amp; in_Email_Body &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Thanks,&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Bot&quot; &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; &quot;&lt;BR&gt;&quot; &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_24" IsBodyHtml="True" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                              <umla:SendLotusNotesMailMessage.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </umla:SendLotusNotesMailMessage.Files>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </umla:SendLotusNotesMailMessage>
                          </If.Then>
                          <If.Else>
                            <umla:SendLotusNotesMailMessage Bcc="{x:Null}" MailMessage="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" AttachmentsCollection="[Attachments_Path]" Body="[&quot;Hi,&quot; &amp; vbCrLf &amp; in_Config(&quot;BodyMail&quot;).ToString &amp; vbCrLf &amp; in_Email_Body &amp; vbCrLf &amp; &quot;Thanks,&quot; &amp; vbCrLf &amp; &quot;Bot&quot; &amp; vbCrLf &amp; &quot;Machine Name : &quot; &amp; Environment.MachineName &amp; vbCrLf &amp; &quot;Robot ID : &quot; &amp; Environment.UserDomainName &amp; &quot;\&quot; &amp; Environment.UserName]" Cc="[in_Config(&quot;TechnicalNotification_Mails_CC&quot;).ToString]" DisplayName="Send IBM Notes Mail Message" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SendLotusNotesMailMessage_25" IsBodyHtml="False" Password="[Notes_Password]" Subject="[in_Config(&quot;Email_Subject_TechnicalNotification&quot;).ToString]" To="[in_Config(&quot;TechnicalNotification_Mails_To&quot;).ToString]">
                              <umla:SendLotusNotesMailMessage.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                              </umla:SendLotusNotesMailMessage.Files>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </umla:SendLotusNotesMailMessage>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level">Error</InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">From Recepient Mail ID For Technical Mails Not Valid</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                </If.Else>
              </If>
            </Sequence>
          </Switch>
        </Sequence>
      </Switch>
    </FlowStep>
    <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID9" DisplayName="Switch - Mail Operations" Expression="[in_Mail_Operation_Type.ToLower]" sap:VirtualizedContainerService.HintSize="136,87" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_3">
      <FlowSwitch.Default>
        <FlowStep x:Name="__ReferenceID8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">480,531</av:Point>
              <av:Size x:Key="ShapeSize">200,103</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="If The Mail Operation Type Is Invalid" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,103" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level">Error</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Is Invalid", in_Mail_Operation_Type)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
        </FlowStep>
      </FlowSwitch.Default>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">272.333333333333,126.666666666667</av:Point>
          <av:Size x:Key="ShapeSize">136,87</av:Size>
          <av:PointCollection x:Key="send mailConnector">272.333333333333,170 100,170 100,238.333333333333</av:PointCollection>
          <av:PointCollection x:Key="Default">374.333333333333,213.666666666667 374.333333333333,582.5 480,582.5</av:PointCollection>
          <av:PointCollection x:Key="read mailConnector">408.333333333333,191.916666666667 438.333333333333,191.916666666667 438.333333333333,295.83333333333303 480,295.83333333333303</av:PointCollection>
          <av:PointCollection x:Key="move mailConnector">272.333333333333,191.916666666667 242.33333333333297,191.916666666667 242.33333333333297,428.666666666667 200,428.666666666667</av:PointCollection>
          <av:PointCollection x:Key="delete mailConnector">340.333333333333,213.666666666667 340.333333333333,432.04 480,432.04</av:PointCollection>
          <av:PointCollection x:Key="save attachmentsConnector">306.333333333333,213.666666666667 306.333333333333,588.666666666667 200,588.666666666667</av:PointCollection>
          <x:String x:Key="DefaultCaseDisplayName">invalid mail operation type</x:String>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <FlowStep x:Key="read mail" x:Name="__ReferenceID4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">480,235.333333333333</av:Point>
            <av:Size x:Key="ShapeSize">200,121</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap2010:Annotation.AnnotationText="Reading Mail Box" DisplayName="Mail Box Read" sap:VirtualizedContainerService.HintSize="200,121" sap2010:WorkflowViewState.IdRef="Sequence_124">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Switch x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Reading Mail Box" DisplayName="Switch" Expression="[in_Server_Type.ToLower]" sap:VirtualizedContainerService.HintSize="497,374" sap2010:WorkflowViewState.IdRef="Switch`1_35">
            <Switch.Default>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Either Not Configured Or Not Supported By Uipath", in_Server_Type)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Error</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Switch.Default>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If x:Key="outlook" Condition="[in_IsMailFilter]" DisplayName="If_Filter Email" sap:VirtualizedContainerService.HintSize="386,479" sap2010:WorkflowViewState.IdRef="If_347">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:GetOutlookMailMessages Account="{x:Null}" FilterByMessageIds="{x:Null}" DisplayName="Get Outlook Mail Messages" Filter="[in_Config(&quot;MailBox_FilterQuery&quot;).ToString]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_11" MailFolder="[in_Config(&quot;ReadMail_FolderName&quot;).ToString]" MarkAsRead="True" Messages="[out_MailMessages]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" TimeoutMS="[Convert.ToInt32(in_Config(&quot;MailsRead_TimeOut&quot;))]" Top="[Convert.ToInt32(in_Config(&quot;TopMails_Read_Count&quot;))]" />
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Read Emails in Descending Order" sap:VirtualizedContainerService.HintSize="304,214" sap2010:WorkflowViewState.IdRef="Sequence_158">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:GetOutlookMailMessages Account="{x:Null}" Filter="{x:Null}" FilterByMessageIds="{x:Null}" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_13" MailFolder="[in_Config(&quot;ReadMail_FolderName&quot;).ToString]" MarkAsRead="True" Messages="[out_MailMessages]" OnlyUnreadMessages="True" OrderByDate="NewestFirst" TimeoutMS="[Convert.ToInt32(in_Config(&quot;MailsRead_TimeOut&quot;))]" Top="[Convert.ToInt32(in_Config(&quot;TopMails_Read_Count&quot;))]" />
                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_87">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">[out_MailMessages]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(snm:MailMessage)">[out_MailMessages.OrderBy(Function(x) x.Headers("date")).ToList]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
            <ui:CommentOut x:Key="exchange" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="CommentOut_2">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,183" sap2010:WorkflowViewState.IdRef="Sequence_161">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[in_IsAutodiscover_Enabled]" sap:VirtualizedContainerService.HintSize="334,363" sap2010:WorkflowViewState.IdRef="If_348">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </If>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <Sequence x:Key="lotus notes" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_155">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[in_Config(&quot;RPA_Lotus_Notes_Credentials&quot;).ToString]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_14" Password="[Password_Notes]" />
              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_82">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:IntPtr">[Pass_Notes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:IntPtr">[Marshal.SecureStringToGlobalAllocUnicode(Password_Notes)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_83">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Notes_Password]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Marshal.PtrToStringUni(Pass_Notes)]</InArgument>
                </Assign.Value>
              </Assign>
              <umla:GetLotusNotesMailMessages SecurePassword="{x:Null}" GetAttachments="True" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="GetLotusNotesMailMessages_2" MailFolder="[String.Format(&quot;(${0})&quot;,in_Config(&quot;ReadMail_FolderName&quot;).ToString)]" Messages="[out_MailMessages]" Password="[Notes_Password]" TimeoutMS="[Convert.ToInt32(in_Config(&quot;MailsRead_TimeOut&quot;))]" Top="[Convert.ToInt32(in_Config(&quot;TopMails_Read_Count&quot;))]" />
            </Sequence>
            <ui:GetPOP3MailMessages SecurePassword="{x:Null}" UseOAuth="{x:Null}" x:Key="pop3" DeleteMessages="False" Email="[LDAP_Email_Address]" EnableSSL="False" sap:VirtualizedContainerService.HintSize="200,32" sap2010:WorkflowViewState.IdRef="GetPOP3MailMessages_2" IgnoreCRL="False" Messages="[out_MailMessages]" Password="[Password_LDAP]" Port="[Convert.ToInt32(in_Config(&quot;POP3_PortNumber&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;POP3_ServerName&quot;).ToString]" TimeoutMS="[Convert.ToInt32(in_Config(&quot;MailsRead_TimeOut&quot;))]" Top="[Convert.ToInt32(in_Config(&quot;TopMails_Read_Count&quot;))]" />
            <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" FilterExpression="{x:Null}" SecurePassword="{x:Null}" UseOAuth="{x:Null}" x:Key="imap" DeleteMessages="False" Email="[LDAP_Email_Address]" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="200,32" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_2" IgnoreCRL="False" MailFolder="[in_Config(&quot;ReadMail_FolderName&quot;).ToString]" MarkAsRead="True" Messages="[out_MailMessages]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Password="[Password_LDAP]" Port="[Convert.ToInt32(in_Config(&quot;IMAP_PortNumber&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;IMAP_ServerName&quot;).ToString]" TimeoutMS="[Convert.ToInt32(in_Config(&quot;MailsRead_TimeOut&quot;))]" Top="[Convert.ToInt32(in_Config(&quot;TopMails_Read_Count&quot;))]" />
          </Switch>
        </Sequence>
      </FlowStep>
      <FlowStep x:Key="move mail" x:Name="__ReferenceID6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,362.666666666667</av:Point>
            <av:Size x:Key="ShapeSize">200,132</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap2010:Annotation.AnnotationText="Moving Mails In MailBox From One Folder To Another" DisplayName="Move Mail" sap:VirtualizedContainerService.HintSize="200,132" sap2010:WorkflowViewState.IdRef="Sequence_134">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="497,61" sap2010:WorkflowViewState.IdRef="CommentOut_1">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,402" sap2010:WorkflowViewState.IdRef="Sequence_160">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;Bot_LDAP_Credentials&quot;).ToString]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_15" Password="[LDAP_Password]" Username="[LDAP_Email_Address]" />
                <ui:IsMatch BuilderPattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="IsMatch_62" Input="[LDAP_Email_Address]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;EMAIL&quot;,&quot;OperationName&quot;:&quot;Email&quot;,&quot;OperationValue&quot;:&quot;((?&gt;[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+\\x20*|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;\\x20*)*(?&lt;angle&gt;&lt;))?((?!\\.)(?&gt;\\.?[a-zA-Z\\d!#$%&amp;'*+\\-\\\/=?^_`{|}~]+)+|\&quot;((?=[\\x01-\\x7f])[^\&quot;\\\\]|\\\\[\\x01-\\x7f])*\&quot;)@(((?!-)[a-zA-Z\\d\\-]+(?&lt;!-)\\.)+[a-zA-Z]{2,}|\\[(((?(?&lt;!\\[)\\.)(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)){4}|[a-zA-Z\\d\\-]*[a-zA-Z\\d]:((?=[\\x01-\\x7f])[^\\\\\\[\\]]|\\\\[\\x01-\\x7f])+)\\])(?(angle)&gt;)&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="((?&gt;[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+\x20*|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;\x20*)*(?&lt;angle&gt;&lt;))?((?!\.)(?&gt;\.?[a-zA-Z\d!#$%&amp;'*+\-\/=?^_`{|}~]+)+|&quot;((?=[\x01-\x7f])[^&quot;\\]|\\[\x01-\x7f])*&quot;)@(((?!-)[a-zA-Z\d\-]+(?&lt;!-)\.)+[a-zA-Z]{2,}|\[(((?(?&lt;!\[)\.)(25[0-5]|2[0-4]\d|[01]?\d?\d)){4}|[a-zA-Z\d\-]*[a-zA-Z\d]:((?=[\x01-\x7f])[^\\\[\]]|\\[\x01-\x7f])+)\])(?(angle)&gt;)" RegexOption="IgnoreCase" Result="[is_Email_Valid]" />
                <If Condition="[is_Email_Valid]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_349">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_159">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_88">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:IntPtr">[Pass_LDAP]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:IntPtr">[Marshal.SecureStringToGlobalAllocUnicode(LDAP_Password)]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_89">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Password_LDAP]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Marshal.PtrToStringUni(Pass_LDAP)]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Mail ID To Move Mails Is Not Valid", LDAP_Email_Address)]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Error</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                  </If.Else>
                </If>
                <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_133">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:GetProcesses ContinueOnError="{x:Null}" DisplayName="Get Processes" sap:VirtualizedContainerService.HintSize="634,22" sap2010:WorkflowViewState.IdRef="GetProcesses_7" Processes="[Process_List]" />
                  <Flowchart sap2010:Annotation.AnnotationText="Perform Outlook Automation" sap:VirtualizedContainerService.HintSize="634,667" sap2010:WorkflowViewState.IdRef="Flowchart_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                        <av:Size x:Key="ShapeSize">60,75</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">300,77.1666666666667 300,107.166666666667 298.975,107.166666666667 298.975,116.5</av:PointCollection>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Flowchart.StartNode>
                      <x:Reference>__ReferenceID2</x:Reference>
                    </Flowchart.StartNode>
                    <FlowDecision x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="To Check If Outlook Is Opened Or Not " Condition="[Process_List.Where(Function(x) x.ProcessName.ToLower.Equals(&quot;outlook&quot;)).Count &gt; 0]" DisplayName="Decision Oulook " sap:VirtualizedContainerService.HintSize="96,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">250.641666666667,116.5</av:Point>
                          <av:Size x:Key="ShapeSize">96,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">250.641666666667,159.833333333333 140,159.833333333333 140,233.666666666667</av:PointCollection>
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          <av:PointCollection x:Key="FalseConnector">347.308333333334,159.833333333333 460,159.833333333333 460,233.666666666667</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID0">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">40,233.666666666667</av:Point>
                              <av:Size x:Key="ShapeSize">200,51</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:MoveOutlookMessage Account="[LDAP_Email_Address]" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_5" MailFolder="[in_Config(&quot;MailBox_Target_Folder&quot;).ToString]" MailMessage="[in_Email_Message]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:MoveOutlookMessage>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">360,233.666666666667</av:Point>
                              <av:Size x:Key="ShapeSize">200,51</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">360,260 240,260</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Outlook" FileName="[in_Config(&quot;Outlook_Application_Path&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="StartProcess_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:StartProcess>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                    <x:Reference>__ReferenceID0</x:Reference>
                    <x:Reference>__ReferenceID1</x:Reference>
                  </Flowchart>
                </Sequence>
              </Sequence>
            </ui:CommentOut.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:CommentOut>
          <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[in_Server_Type.ToLower]" sap:VirtualizedContainerService.HintSize="497,359" sap2010:WorkflowViewState.IdRef="Switch`1_29">
            <Switch.Default>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Either Not Configured Or Not Supported By Uipath", in_Server_Type)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Error</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Switch.Default>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MoveOutlookMessage x:Key="outlook" Account="[in_FromAddress]" DisplayName="Move Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,99" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_6" MailFolder="[in_Config(&quot;Move_FolderName&quot;).ToString]" MailMessage="[in_Email_Message]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MoveOutlookMessage>
            <ui:CommentOut x:Key="exchange" sap:VirtualizedContainerService.HintSize="436,573" sap2010:WorkflowViewState.IdRef="CommentOut_3">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,485" sap2010:WorkflowViewState.IdRef="Sequence_162">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[in_IsAutodiscover_Enabled]" sap:VirtualizedContainerService.HintSize="338,363" sap2010:WorkflowViewState.IdRef="If_268">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </If>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <Sequence x:Key="lotus notes" sap:VirtualizedContainerService.HintSize="400,603" sap2010:WorkflowViewState.IdRef="Sequence_136">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[in_Config(&quot;RPA_Lotus_Notes_Credentials&quot;).ToString]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="GetRobotCredential_11" Password="[Password_Notes]" />
              <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_68">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:IntPtr">[Pass_Notes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:IntPtr">[Marshal.SecureStringToGlobalAllocUnicode(Password_Notes)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_69">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Notes_Password]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Marshal.PtrToStringUni(Pass_Notes)]</InArgument>
                </Assign.Value>
              </Assign>
              <umla:MoveLotusNotesMailMessage SecurePassword="{x:Null}" FromFolder="[String.Format(&quot;(${0})&quot;,in_Config(&quot;ReadMail_FolderName&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="338,128" sap2010:WorkflowViewState.IdRef="MoveLotusNotesMailMessage_2" MailFolder="[String.Format(&quot;(${0})&quot;,in_Config(&quot;MailBox_Target_Folder&quot;).ToString)]" MailMessage="[in_Email_Message]" Password="[Notes_Password]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </umla:MoveLotusNotesMailMessage>
            </Sequence>
            <ui:MoveIMAPMailMessageToFolder ClientName="{x:Null}" ClientVersion="{x:Null}" SecurePassword="{x:Null}" UseOAuth="{x:Null}" x:Key="imap" Email="[LDAP_Email_Address]" EnableSSL="True" FromFolder="[in_Config(&quot;ReadMail_FolderName&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,61" sap2010:WorkflowViewState.IdRef="MoveIMAPMailMessageToFolder_2" IgnoreCRL="False" MailFolder="[in_Config(&quot;MailBox_Target_Folder&quot;).ToString]" MailMessage="[in_Email_Message]" Password="[Password_LDAP]" Port="[Convert.ToInt32(in_Config(&quot;IMAP_PortNumber&quot;))]" SecureConnection="Auto" Server="[in_Config(&quot;IMAP_ServerName&quot;).ToString]" />
          </Switch>
        </Sequence>
      </FlowStep>
      <FlowStep x:Key="delete mail" x:Name="__ReferenceID7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">480,366.04</av:Point>
            <av:Size x:Key="ShapeSize">200,132</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap2010:Annotation.AnnotationText="Deleting Mails In A Particular MailBox" DisplayName="Delete Mail" sap:VirtualizedContainerService.HintSize="200,132" sap2010:WorkflowViewState.IdRef="Sequence_137">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[in_Server_Type.ToLower]" sap:VirtualizedContainerService.HintSize="497,276" sap2010:WorkflowViewState.IdRef="Switch`1_30">
            <Switch.Default>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RPA_Core_Logging_Wrapper workflow" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[String.Format("{0} Either Not Configured Or Not Supported By Uipath", in_Server_Type)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">RPA_Core_Mail_Wrapper</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Error</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
            </Switch.Default>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <x:Null x:Key="exchange" />
            <Sequence x:Key="lotus notes" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_139">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="[in_Config(&quot;RPA_Lotus_Notes_Credentials&quot;).ToString]" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_13" Password="[Password_Notes]" />
              <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_72">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:IntPtr">[Pass_Notes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:IntPtr">[Marshal.SecureStringToGlobalAllocUnicode(Password_Notes)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_73">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Notes_Password]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Marshal.PtrToStringUni(Pass_Notes)]</InArgument>
                </Assign.Value>
              </Assign>
              <umla:DeleteLotusNotesMailMessage SecurePassword="{x:Null}" FromFolder="[String.Format(&quot;(${0})&quot;,in_Config(&quot;ReadMail_FolderName&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="DeleteLotusNotesMailMessage_1" MailMessage="[in_Email_Message]" Password="[Notes_Password]" />
            </Sequence>
          </Switch>
        </Sequence>
      </FlowStep>
      <x:Reference>__ReferenceID3<x:Key>send mail</x:Key></x:Reference>
      <FlowStep x:Key="save attachments" x:Name="__ReferenceID5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,522.666666666667</av:Point>
            <av:Size x:Key="ShapeSize">200,132</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Sequence sap2010:Annotation.AnnotationText="To Save Attachments In The Respective Folder" DisplayName="save attachement" sap:VirtualizedContainerService.HintSize="200,132" sap2010:WorkflowViewState.IdRef="Sequence_129">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[String.IsNullOrEmpty(in_Config(&quot;Attachments_Filter&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_264">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <ui:SaveMailAttachments Attachments="[out_Attachments_List]" DisplayName="Save Attachments" ExcludeInlineAttachments="False" FolderPath="[in_Config(&quot;Save_Attachments_Folder_Path&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_3" Message="[in_Email_Message]" OverwriteExisting="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SaveMailAttachments>
            </If.Then>
            <If.Else>
              <ui:SaveMailAttachments Attachments="[out_Attachments_List]" DisplayName="Save Attachments" ExcludeInlineAttachments="False" Filter="[in_Config(&quot;Attachments_Filter&quot;).ToString]" FolderPath="[in_Config(&quot;Save_Attachments_Folder_Path&quot;).ToString]" sap:VirtualizedContainerService.HintSize="200,52.6666666666667" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[in_Email_Message]" OverwriteExisting="False">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SaveMailAttachments>
            </If.Else>
          </If>
        </Sequence>
      </FlowStep>
    </FlowSwitch>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
  </Flowchart>
</Activity>