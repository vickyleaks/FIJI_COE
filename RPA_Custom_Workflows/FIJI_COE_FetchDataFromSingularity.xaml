<Activity mc:Ignorable="sap sap2010" x:Class="FIJI_COE_FetchDataFromSingularity" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dict_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(x:String)" />
    <x:Property Name="out_mailmessage" Type="OutArgument(snm:MailMessage)" />
    <x:Property Name="out_str_startdatetime" Type="OutArgument(x:String)" />
    <x:Property Name="in_tuple_config" Type="InArgument(scg:Dictionary(x:String, s:Tuple(x:String, x:String)))" />
    <x:Property Name="out_dt_singularity" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_dt_vendorfile" Type="InArgument(sd:DataTable)" />
    <x:Property Name="out_list_OrderItem" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="out_list_quantity" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="in_dt_locationfile" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,10633</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>FIJI_COE_FetchDataFromSingularity_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="73">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="FIJI_COE_FetchDataFromSingularity" sap:VirtualizedContainerService.HintSize="683,10568" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="li_mailMessages" />
      <Variable x:TypeArguments="x:String" Name="str_dateLow" />
      <Variable x:TypeArguments="x:String" Name="str_dateFilter" />
      <Variable x:TypeArguments="x:String" Name="str_dateHigh" />
      <Variable x:TypeArguments="x:String" Name="ExceptionMessage" />
      <Variable x:TypeArguments="x:Int32" Name="int_VendorCodeIndex" />
      <Variable x:TypeArguments="x:Int32" Name="int_QuantityIndex" />
      <Variable x:TypeArguments="x:Boolean" Name="bool_locationFlag" />
      <Variable x:TypeArguments="sd:DataTable" Name="out_dt_singularity1" />
      <Variable x:TypeArguments="x:String" Name="str_singuOutputFileName" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="ien_mailAttachments" />
      <Variable x:TypeArguments="x:Int32" Name="AttachmentIndex" />
      <Variable x:TypeArguments="x:Int32" Name="int_PurchaseOrderIndex" />
      <Variable x:TypeArguments="x:Int32" Name="int_ShipLocationIndex" />
      <Variable x:TypeArguments="x:Int32" Name="int_ShiptoArriveIndex" />
      <Variable x:TypeArguments="x:Int32" Name="int_OrderIndex" />
      <Variable x:TypeArguments="x:Int32" Name="int_VendorNameRowIndex" />
      <Variable x:TypeArguments="x:String" Name="strCustomerID" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="621,203" sap2010:WorkflowViewState.IdRef="MultipleAssign_7">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_29">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Object">[in_dict_config("PONumber")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Object">[""]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_30">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Object">[in_dict_config("RequestDate")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Object">[""]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Object">[in_dict_config("ShipLocation")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Object">[""]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Object">[in_dict_config("VendorName")]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Object">[""]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <TryCatch sap2010:Annotation.AnnotationText="Reads Singu Ouput Sheet1" DisplayName="Try Catch: Reads Singu Ouput Sheet1" sap:VirtualizedContainerService.HintSize="621,92" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_singularity]" DisplayName="Read Range Workbook: MinIO Output" sap:VirtualizedContainerService.HintSize="334,97" sap2010:WorkflowViewState.IdRef="ReadRange_5" SheetName="[in_dict_config(&quot;SingularitySheetName1&quot;).ToString]" WorkbookPath="[in_TransactionItem]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:Annotation.AnnotationText="Throw Business Exception(Sheet data missing)" DisplayName="Throw Business Exception(Sheet data missing)" sap:VirtualizedContainerService.HintSize="441,121" sap2010:WorkflowViewState.IdRef="Sequence_78">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_88">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0022</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <Throw Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Throw>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <TryCatch sap2010:Annotation.AnnotationText="Reads Singu Ouput Sheet2" DisplayName="Try Catch: Reads Singu Ouput Sheet2" sap:VirtualizedContainerService.HintSize="621,92" sap2010:WorkflowViewState.IdRef="TryCatch_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_singularity1]" DisplayName="Read Range Workbook: MinIO Output" sap:VirtualizedContainerService.HintSize="334,97" sap2010:WorkflowViewState.IdRef="ReadRange_6" SheetName="[in_dict_config(&quot;SingularitySheetName2&quot;).ToString]" WorkbookPath="[in_TransactionItem]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:Annotation.AnnotationText="Throw Business Exception(Sheet data missing)" DisplayName="Throw Business Exception(Sheet data missing)" sap:VirtualizedContainerService.HintSize="441,121" sap2010:WorkflowViewState.IdRef="Sequence_79">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_89">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0022</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeWorkflowFile>
              <Throw Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_20">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Throw>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each: lookup Singularity row fields from output file" DisplayName="For Each: lookup Singularity row fields from output file" sap:VirtualizedContainerService.HintSize="621,1725" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[in_dict_config(&quot;SingularityFields&quot;).ToString.Split(&quot;,&quot;c)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="585,1560" sap2010:WorkflowViewState.IdRef="Sequence_61">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="int_RowIndex" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[out_dt_singularity1]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="523,301" sap2010:WorkflowViewState.IdRef="LookupDataTable_5" LookupColumnName="[in_dict_config(&quot;SingularityDescriptionColumn&quot;).ToString]" LookupValue="[in_dict_config(currentItem).ToString]" RowIndex="[int_RowIndex]" />
            <If sap2010:Annotation.AnnotationText="If: Any row field is missing in Singularity output, Throw Exception" Condition="[int_RowIndex=-1]" DisplayName="If: Any row field is missing in Singularity output, Throw Exception" sap:VirtualizedContainerService.HintSize="523,1097" sap2010:WorkflowViewState.IdRef="If_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="441,711" sap2010:WorkflowViewState.IdRef="Sequence_59">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_68">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0012</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2.Replace("{0}",in_dict_config(currentItem).ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_82">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["EX-LBM-NEDI-0012,"+in_dict_config(currentItem).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_99">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[in_dict_config("PONumber")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[if(in_dict_config.ContainsKey("SingularityPurchaseOrderFieldIndex"),if(CInt(in_dict_config("SingularityPurchaseOrderFieldIndex"))=-1,"",String.Join("",out_dt_singularity1(CInt(in_dict_config("SingularityPurchaseOrderFieldIndex")))(2).ToString.Replace("[","").Replace("'","").Replace("]","").Replace(".","").split(" "c))),"")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_15" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_60">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_69">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[in_dict_config(currentItem+"Index")]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[int_RowIndex]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <Assign DisplayName="Assign: PO Number to Config" sap:VirtualizedContainerService.HintSize="621,70" sap2010:WorkflowViewState.IdRef="Assign_96">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[in_dict_config("PONumber")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[String.Join("",out_dt_singularity1(CInt(in_dict_config("SingularityPurchaseOrderFieldIndex")))(2).ToString.Replace("[","").Replace("'","").Replace("]","").Replace(".","").split(" "c))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign: Request Date to Config" sap:VirtualizedContainerService.HintSize="621,70" sap2010:WorkflowViewState.IdRef="Assign_97">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[in_dict_config("RequestDate")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[String.Join("",out_dt_singularity1(CInt(in_dict_config("SingularityShipToDateFieldIndex")))(2).ToString.Replace("[","").Replace("'","").Replace("]","").Replace(".","").split(" "c))]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign: ShipTo Date to Conifg" sap:VirtualizedContainerService.HintSize="621,70" sap2010:WorkflowViewState.IdRef="Assign_98">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[in_dict_config("ShipLocation")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[out_dt_singularity1(CInt(in_dict_config("SingularityShipToLocationFieldIndex")))(2).ToString.Replace("[","").Replace("'","").Replace("]","")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="621,70" sap2010:WorkflowViewState.IdRef="Assign_94">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strCustomerID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(out_dt_singularity1(CInt(in_dict_config("SingularityVendorNameFieldIndex")))(2).ToString.Tolower, "[^a-zA-Z0-9]","")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="621,70" sap2010:WorkflowViewState.IdRef="Assign_95">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[strCustomerID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[If(strCustomerID.Contains(in_dict_config("LocationChefWHMapp").ToString),if(in_dict_config("ShipLocation").ToString.ToLower.Contains("ny"),strCustomerID+"ny",if(in_dict_config("ShipLocation").ToString.ToLower.Contains("md"),strCustomerID+"md",strCustomerID)),If(strCustomerID.Contains(in_dict_config("LocationMSWMapp").ToString),if(in_dict_config("ShipLocation").ToString.ToLower.Contains("commercial"),strCustomerID+"commercial",strCustomerID),strCustomerID))]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Lookup Data Table: CustomerID" DataTable="[in_dt_locationfile]" DisplayName="Lookup Data Table: CustomerID" sap:VirtualizedContainerService.HintSize="621,332" sap2010:WorkflowViewState.IdRef="LookupDataTable_9" LookupColumnName="[in_dict_config(&quot;LocationMappingCustomerNameColumn&quot;).ToString]" LookupValue="[strCustomerID]" RowIndex="[int_VendorNameRowIndex]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LookupDataTable>
    <If Condition="[int_VendorNameRowIndex=-1]" sap:VirtualizedContainerService.HintSize="621,956" sap2010:WorkflowViewState.IdRef="If_26">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="441,601" sap2010:WorkflowViewState.IdRef="Sequence_81">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_92">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0024</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_93">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["EX-LBM-NEDI-0024,"+strCustomerID]</InArgument>
            </Assign.Value>
          </Assign>
          <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_21" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_82">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_91">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[in_dict_config("VendorName")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[in_dt_locationfile(int_VendorNameRowIndex)(1)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Lookup Order field exist in Data Table or not" DataTable="[out_dt_singularity1]" DisplayName="Lookup Order field exist in Data Table or not" sap:VirtualizedContainerService.HintSize="621,103" sap2010:WorkflowViewState.IdRef="LookupDataTable_7" LookupColumnName="[in_dict_config(&quot;SingularityDescriptionColumn&quot;).ToString]" LookupValue="[in_dict_config(&quot;SingularityOrderField&quot;).ToString]" RowIndex="[int_OrderIndex]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LookupDataTable>
    <If sap2010:Annotation.AnnotationText="If ORDER field exists in SinguOutputFile, Concatenate with PO" Condition="[Not(int_OrderIndex=-1)]" DisplayName="If ORDER field exists in SinguOutputFile, Concatenate with PO" sap:VirtualizedContainerService.HintSize="621,486" sap2010:WorkflowViewState.IdRef="If_24">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_77">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_85">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[in_dict_config("PONumber")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[out_dt_singularity1(int_OrderIndex)(2).ToString+"-" + in_dict_config("PONumber").ToString]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="621,414" sap2010:WorkflowViewState.IdRef="CommentOut_13">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,326" sap2010:WorkflowViewState.IdRef="Sequence_83">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Lookup VendorName column exist in Data Table or not" DataTable="[out_dt_singularity1]" DisplayName="Lookup VendorName column exist in Data Table or not" sap:VirtualizedContainerService.HintSize="338,103" sap2010:WorkflowViewState.IdRef="LookupDataTable_8" LookupColumnName="[in_dict_config(&quot;SingularityDescriptionColumn&quot;).ToString]" LookupValue="[in_dict_config(&quot;SingularityVendorNameColumn&quot;).ToString]" RowIndex="[int_OrderIndex]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LookupDataTable>
          <If Condition="[Not(int_OrderIndex=-1)]" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="If_25">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_80">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_90">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[in_dict_config("CustomerName")]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[out_dt_singularity1(int_OrderIndex)(2).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <Assign DisplayName="Assign: Get Index of VendorProductCode" sap:VirtualizedContainerService.HintSize="621,70" sap2010:WorkflowViewState.IdRef="Assign_65">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[int_VendorCodeIndex]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[out_dt_singularity.Columns.IndexOf(in_dict_config("SingularityVPCColumn").ToString)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign: Get Index of Quantity" sap:VirtualizedContainerService.HintSize="621,70" sap2010:WorkflowViewState.IdRef="Assign_66">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[int_QuantityIndex]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[out_dt_singularity.Columns.IndexOf(in_dict_config("SingularityQuantityColumn").ToString)]</InArgument>
      </Assign.Value>
    </Assign>
    <If sap2010:Annotation.AnnotationText="Checks if Vendor Product Code and Quantity Index are present in Output of singularity or not" Condition="[int_QuantityIndex=-1 or int_VendorCodeIndex=-1]" sap:VirtualizedContainerService.HintSize="621,906" sap2010:WorkflowViewState.IdRef="If_17">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="441,601" sap2010:WorkflowViewState.IdRef="Sequence_57">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_67">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0011</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2.Replace("{0}",if(int_QuantityIndex=-1 and int_VendorCodeIndex=-1,"Quantity, Vendor Product Code",if(int_VendorCodeIndex=-1,"Vendor Product Code",if(int_QuantityIndex=-1,"Quantity",""))))]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_81">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["EX-LBM-NEDI-0011," + if(int_QuantityIndex=-1 and int_VendorCodeIndex=-1,"Quantity, Vendor Product Code",if(int_VendorCodeIndex=-1,"Vendor Product Code",if(int_QuantityIndex=-1,"Quantity","")))]</InArgument>
            </Assign.Value>
          </Assign>
          <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_14" />
        </Sequence>
      </If.Then>
    </If>
    <ui:IsMatch DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="621,69" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[in_dict_config(&quot;ShipLocation&quot;).ToString]" IsBuilderTabModified="False" Pattern="[in_dict_config(&quot;LocationRegexExpression&quot;).ToString.Replace(&quot;|&quot;,&quot;1&quot;)]" RegexOption="IgnoreCase, Compiled" Result="[bool_locationFlag]" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="621,61" sap2010:WorkflowViewState.IdRef="CommentOut_11">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,183" sap2010:WorkflowViewState.IdRef="Sequence_75">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[in_dict_config(&quot;ShipLocation&quot;).tostring.split(&quot;,&quot;c)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="544,700" sap2010:WorkflowViewState.IdRef="Sequence_64">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If Condition="[IsNumeric(currentItem.ToString.Trim.split(&quot; &quot;c)(0)) and currentItem.ToString.Trim.Split(&quot; &quot;c).Length&gt;1]" sap:VirtualizedContainerService.HintSize="482,578" sap2010:WorkflowViewState.IdRef="If_19">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,302" sap2010:WorkflowViewState.IdRef="Sequence_62">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_74">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[bool_locationFlag]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_75">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[in_dict_config("ShipLocation")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[currentItem.ToString.Trim.split(" "c)(0) + " " + Left(currentItem.ToString.Trim.split(" "c)(1),1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_63">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <If sap2010:Annotation.AnnotationText="If: Location is found in singu Output, Throw BE" Condition="[Not(bool_locationFlag)]" DisplayName="If: Location is found in singu Output, Throw BE" sap:VirtualizedContainerService.HintSize="621,798" sap2010:WorkflowViewState.IdRef="If_20">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="441,491" sap2010:WorkflowViewState.IdRef="Sequence_65">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_76">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0014</InArgument>
            </Assign.Value>
          </Assign>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InvokeWorkflowFile>
          <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_16" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_66">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="Assigning OrderItem,Quantity Lists" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="621,172" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[out_list_OrderItem]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[New List(of String)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_28">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="scg:List(x:String)">[out_list_quantity]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each: lookup vendor codes from vendor mapping file" DataTable="[out_dt_singularity]" DisplayName="For Each: lookup vendor codes from vendor mapping file" sap:VirtualizedContainerService.HintSize="621,2404" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="585,2248" sap2010:WorkflowViewState.IdRef="Sequence_70">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="int_rowIndex" />
              <Variable x:TypeArguments="x:Int32" Name="int_columnIndex" />
              <Variable x:TypeArguments="x:String" Name="str_orderItem" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If sap2010:Annotation.AnnotationText="If: Vendor Product code or quantity row value is empty, throw BE" Condition="[CurrentRow(in_dict_config(&quot;SingularityVPCColumn&quot;).ToString).ToString.trim=&quot;&quot; Or CurrentRow(in_dict_config(&quot;SingularityQuantityColumn&quot;).ToString).ToString.Trim = &quot;&quot;]" DisplayName="If: Vendor Product code or quantity row value is empty, throw BE" sap:VirtualizedContainerService.HintSize="523,118" sap2010:WorkflowViewState.IdRef="If_21">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="441,491" sap2010:WorkflowViewState.IdRef="Sequence_67">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_77">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0013</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2.Replace("{0}",if(CurrentRow(in_dict_config("SingularityVPCColumn").ToString).ToString.trim="","Vendor product code","Quantity"))]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_17" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_68">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="523,61" sap2010:WorkflowViewState.IdRef="CommentOut_12">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="642,805" sap2010:WorkflowViewState.IdRef="Sequence_76">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each: FII or FIU or FUI Mapp to FIJI" DisplayName="For Each: FII or FIU or FUI Mapp to FIJI" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[in_dict_config(&quot;FIJ_NonEDI_COE_FIJIMapping&quot;).ToString.Split(in_dict_config(&quot;FIJ_NonEDI_COE_CommaSeperator&quot;).ToString)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="FIIMapping" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="544,590" sap2010:WorkflowViewState.IdRef="Sequence_74">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[CurrentRow(in_dict_config(&quot;SingularityVPCColumn&quot;).ToString).ToString.contains(FIIMapping.ToString)]" sap:VirtualizedContainerService.HintSize="482,468" sap2010:WorkflowViewState.IdRef="If_23">
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_80">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[CurrentRow(in_dict_config("SingularityVPCColumn").ToString)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[CurrentRow(in_dict_config("SingularityVPCColumn").ToString).ToString.Replace(FIIMapping.ToString,in_dict_config("FIJ_NonEDI_COE_FIJIMapping").ToString.Split(in_dict_config("FIJ_NonEDI_COE_AtTheRateSeperator").ToString)(1))]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <Assign sap:VirtualizedContainerService.HintSize="523,70" sap2010:WorkflowViewState.IdRef="Assign_84">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[CurrentRow(in_dict_config("SingularityVPCColumn").ToString)]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[CurrentRow(in_dict_config("SingularityVPCColumn").ToString).ToString.Replace(" ","")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_dt_vendorfile]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="523,301" sap2010:WorkflowViewState.IdRef="LookupDataTable_6" LookupColumnName="[in_dict_config(&quot;VendorMappingVPCColumn&quot;).ToString]" LookupValue="[CurrentRow(in_dict_config(&quot;SingularityVPCColumn&quot;).ToString).ToString]" RowIndex="[int_rowIndex]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LookupDataTable>
            <If Condition="[int_rowIndex = -1]" sap:VirtualizedContainerService.HintSize="523,864" sap2010:WorkflowViewState.IdRef="If_22">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="441,601" sap2010:WorkflowViewState.IdRef="Sequence_69">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_78">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0008</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2.Replace("{0}",CurrentRow(in_dict_config("SingularityVPCColumn").ToString).ToString)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_83">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["EX-LBM-NEDI-0008,"+CurrentRow(in_dict_config("SingularityVPCColumn").ToString).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_18" />
                </Sequence>
              </If.Then>
            </If>
            <Assign sap:VirtualizedContainerService.HintSize="523,70" sap2010:WorkflowViewState.IdRef="Assign_79">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[str_orderItem]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_dt_vendorfile(int_rowIndex)(1).tostring]</InArgument>
              </Assign.Value>
            </Assign>
            <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[out_list_OrderItem]" DisplayName="Append item to collection" sap:VirtualizedContainerService.HintSize="523,181" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_7" Result="[out_list_OrderItem]">
              <uasc:AppendItemToCollection.Items>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                  <InArgument x:TypeArguments="x:String">[str_orderItem]</InArgument>
                </scg:List>
              </uasc:AppendItemToCollection.Items>
            </uasc:AppendItemToCollection>
            <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[out_list_quantity]" DisplayName="Append item to collection" sap:VirtualizedContainerService.HintSize="523,181" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_8" Result="[out_list_quantity]">
              <uasc:AppendItemToCollection.Items>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                  <InArgument x:TypeArguments="x:String">[CurrentRow("Quantity").ToString.Replace(",","").Replace(".00","")]</InArgument>
                </scg:List>
              </uasc:AppendItemToCollection.Items>
            </uasc:AppendItemToCollection>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="621,61" sap2010:WorkflowViewState.IdRef="CommentOut_9">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="493,841" sap2010:WorkflowViewState.IdRef="Sequence_56">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:GetOutlookMailMessages Filter="{x:Null}" TimeoutMS="{x:Null}" Account="[in_dict_config(&quot;OutlookAccountName&quot;).ToString]" sap2010:Annotation.AnnotationText="Get mail, based on &#xA;Message-Id" DisplayName="Get Outlook Mail Messages" FilterByMessageIds="[{in_TransactionItem.SpecificContent(&quot;MessageID&quot;).ToString}]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="431,74" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_4" MailFolder="[in_dict_config(&quot;OutlookMailFolder&quot;).ToString]" MarkAsRead="False" Messages="[li_mailMessages]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="30">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:GetOutlookMailMessages>
          <If sap2010:Annotation.AnnotationText="If: Mail retrieve by messageID, goto next step, Else: retrieve mail by DateTime" Condition="[li_mailMessages.Count&gt;0]" DisplayName="If: Mail retrieve by messageID, goto next step, Else: retrieve mail by DateTime" sap:VirtualizedContainerService.HintSize="431,118" sap2010:WorkflowViewState.IdRef="If_9">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="441,354" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_55">
                  <Assign.To>
                    <OutArgument x:TypeArguments="snm:MailMessage">[out_mailmessage]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="snm:MailMessage">[li_mailMessages(0)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_dict_config("SC-LM-0013").ToString.Replace("{0}",li_mailMessages.Count.ToString)]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">Info</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">SC-LM-0013</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="642,1446" sap2010:WorkflowViewState.IdRef="Sequence_32">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap2010:Annotation.AnnotationText="Converts Tansaction Item ReceivedDateTime to required string format" DisplayName="Assign: Converts Valid Date string format low" sap:VirtualizedContainerService.HintSize="580,127" sap2010:WorkflowViewState.IdRef="Assign_33">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str_dateLow]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(in_TransactionItem.SpecificContent("RecievedDateTime").ToString.Split(","c)(1).ToString.Trim.Substring(0,20),"dd MMM yyyy HH:mm:ss", System.Globalization.CultureInfo.InvariantCulture).AddMinutes(-2).ToString("MM/dd/yyyy HH:mm tt")]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Converts Tansaction Item ReceivedDateTime to required string format" DisplayName="Assign: Converts Valid Date string format high" sap:VirtualizedContainerService.HintSize="580,127" sap2010:WorkflowViewState.IdRef="Assign_34">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str_dateHigh]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(in_TransactionItem.SpecificContent("RecievedDateTime").ToString.Split(","c)(1).ToString.Trim.Substring(0,20),"dd MMM yyyy HH:mm:ss", System.Globalization.CultureInfo.InvariantCulture).AddMinutes(2).ToString("MM/dd/yyyy HH:mm tt")]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Filter expression for Received Time.&#xA;" sap:VirtualizedContainerService.HintSize="580,112" sap2010:WorkflowViewState.IdRef="Assign_35">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[str_dateFilter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["[ReceivedTime] &lt;= '"+ str_dateHigh +"' AND [ReceivedTime] &gt;= '" +str_dateLow + "'"]</InArgument>
                  </Assign.Value>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Assign>
                <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="[in_dict_config(&quot;OutlookAccountName&quot;).ToString]" sap2010:Annotation.AnnotationText="Get mail, based on Received time tolerance on 2minutes" DisplayName="Get Outlook Mail Messages" Filter="[str_dateFilter]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="580,74" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_5" MailFolder="[in_dict_config(&quot;OutlookMailFolder&quot;).ToString]" MarkAsRead="False" Messages="[li_mailMessages]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="30">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:GetOutlookMailMessages>
                <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each: Loop over mail messages until  get the specified one" sap:VirtualizedContainerService.HintSize="580,782" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[li_mailMessages]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="snm:MailMessage">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="currentItem" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="544,649" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[currentItem.Headers(&quot;Date&quot;).ToString = in_TransactionItem.SpecificContent(&quot;RecievedDateTime&quot;).ToString]" DisplayName="If: Current mail message date time = Transaction Item Received date time" sap:VirtualizedContainerService.HintSize="482,527" sap2010:WorkflowViewState.IdRef="If_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign: Mail message to argument" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_1">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="snm:MailMessage">[out_mailmessage]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="snm:MailMessage">[currentItem]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:Break sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Break_1" />
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEach>
              </Sequence>
            </If.Else>
          </If>
          <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,172" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
            <ui:MultipleAssign.AssignOperations>
              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_24">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Object">[in_dict_config("MailSubject")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Object">[out_mailmessage.Subject]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Object">[in_dict_config("MailSenderAddress")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Object">[out_mailmessage.SenderEmailAddress]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                  <ui:AssignOperation.To>
                    <OutArgument x:TypeArguments="x:Object">[in_dict_config("MailSenderName")]</OutArgument>
                  </ui:AssignOperation.To>
                  <ui:AssignOperation.Value>
                    <InArgument x:TypeArguments="x:Object">[out_mailmessage.Sender.DisplayName]</InArgument>
                  </ui:AssignOperation.Value>
                </ui:AssignOperation>
              </scg:List>
            </ui:MultipleAssign.AssignOperations>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:MultipleAssign>
          <If sap2010:Annotation.AnnotationText="If: Mail message contains pdf or excel attachment" Condition="[if(out_mailmessage.Attachments.count&gt;0,out_mailmessage.Attachments(0).Name.ToString.ToLower.Contains(&quot;.pdf&quot;) or out_mailmessage.Attachments(0).Name.ToString.ToLower.Contains(&quot;.xlsx&quot;),false)]" DisplayName="If: Mail message contains pdf or excel attachment" sap:VirtualizedContainerService.HintSize="431,103" sap2010:WorkflowViewState.IdRef="If_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="400,219" sap2010:WorkflowViewState.IdRef="Sequence_33">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:SaveMailAttachments Attachments="[ien_mailAttachments]" DisplayName="Save Attachments" ExcludeInlineAttachments="False" FolderPath="[in_dict_config(&quot;AttachmentsFolderPath&quot;).ToString]" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[out_mailmessage]" OverwriteExisting="False" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_34">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_36">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0005</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeWorkflowFile>
                <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_8" />
              </Sequence>
            </If.Else>
          </If>
          <ui:ForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="For Each: Download all attachments from mail to Inputs folder" CurrentIndex="[AttachmentIndex]" DisplayName="For Each: Download all attachments from mail to Inputs folder" sap:VirtualizedContainerService.HintSize="431,92" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[ien_mailAttachments]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,274" sap2010:WorkflowViewState.IdRef="Sequence_51">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:RenameFileX DisplayName="Rename File" FilePath="[in_dict_config(&quot;AttachmentsFolderPath&quot;).ToString + Path.GetFileName(currentItem)]" sap:VirtualizedContainerService.HintSize="338,152" sap2010:WorkflowViewState.IdRef="RenameFileX_3" KeepExtension="True" NewName="[in_dict_config(&quot;SingularityInputsFolderPath&quot;).ToString +out_mailmessage.Headers(&quot;Message-Id&quot;).ToString.Replace(&quot;&lt;&quot;,&quot;LESSTHAN&quot;).Replace(&quot;&gt;&quot;,&quot;GREATERTHAN&quot;)+&quot;`&quot;+ Path.GetFileName(currentItem)]" />
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="621,61" sap2010:WorkflowViewState.IdRef="CommentOut_10">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="743,7667" sap2010:WorkflowViewState.IdRef="Sequence_71">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="Sequence_54">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_singularity]" DisplayName="Reads Singularity output file" sap:VirtualizedContainerService.HintSize="619,97" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="[in_dict_config(&quot;SingularitySheetName1&quot;).ToString]" WorkbookPath="[in_TransactionItem]" />
            <Assign DisplayName="Assign: Get Index of VendorProductCode" sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_39">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[int_VendorCodeIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[out_dt_singularity.Columns.IndexOf(in_dict_config("SingularityVPCColumn").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign: Get Index of Quantity" sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_40">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[int_QuantityIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[out_dt_singularity.Columns.IndexOf(in_dict_config("SingularityQuantityColumn").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_57">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[int_PurchaseOrderIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[out_dt_singularity.Columns.IndexOf(in_dict_config("SingularityPurchaseOrderField").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_58">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[int_ShipLocationIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[out_dt_singularity.Columns.IndexOf(in_dict_config("SingularityShipToLocationField").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_59">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[int_ShiptoArriveIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[out_dt_singularity.Columns.IndexOf(in_dict_config("SingularityShipToDateField").ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <If sap2010:Annotation.AnnotationText="Checks if Vendor Product Code and Quantity Index are present in Output of singularity or not" Condition="[int_QuantityIndex=-1 or int_VendorCodeIndex=-1 or int_PurchaseOrderIndex=-1 or  int_ShipLocationIndex=-1 or int_ShiptoArriveIndex=-1]" sap:VirtualizedContainerService.HintSize="619,1359" sap2010:WorkflowViewState.IdRef="If_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="441,1041" sap2010:WorkflowViewState.IdRef="Sequence_35">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="str_ExceptionMsg" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_41">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0011</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_60">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_ExceptionMsg]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(int_QuantityIndex=-1,"Quantity","")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_61">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_ExceptionMsg]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(int_PurchaseOrderIndex=-1,if(str_ExceptionMsg="","Purchase Order",str_ExceptionMsg+",Purchase Order"),"")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_62">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_ExceptionMsg]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(int_ShipLocationIndex=-1,if(str_ExceptionMsg="","Ship To",str_ExceptionMsg+",Ship To"),"")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_63">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_ExceptionMsg]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(int_VendorCodeIndex=-1,if(str_ExceptionMsg="","Vendor Product Code",str_ExceptionMsg+",Vendor Product Code"),"")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_64">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_ExceptionMsg]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[if(int_ShiptoArriveIndex=-1,if(str_ExceptionMsg="","Ship To Arrive",str_ExceptionMsg+",Ship To Arrive"),"")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2.Replace("{0}",str_ExceptionMsg)]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_9" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_36">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="619,61" sap2010:WorkflowViewState.IdRef="CommentOut_8">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="453,214" sap2010:WorkflowViewState.IdRef="Sequence_55">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each: lookup vendor codes from vendor mapping file" DisplayName="For Each: lookup vendor codes from vendor mapping file" sap:VirtualizedContainerService.HintSize="391,92" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[in_dict_config(&quot;SingularityFields&quot;).ToString.Split(&quot;,&quot;c)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,581" sap2010:WorkflowViewState.IdRef="Sequence_39">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="int_RowIndex" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[out_dt_singularity]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="338,301" sap2010:WorkflowViewState.IdRef="LookupDataTable_3" LookupColumnName="[in_dict_config(&quot;SingularityDescriptionColumn&quot;).ToString]" LookupValue="[in_dict_config(currentItem).ToString]" RowIndex="[int_RowIndex]" />
                          <If sap2010:Annotation.AnnotationText="If: Any row field is missing in Singularity output, Throw Exception" Condition="[int_RowIndex=-1]" DisplayName="If: Any row field is missing in Singularity output, Throw Exception" sap:VirtualizedContainerService.HintSize="338,118" sap2010:WorkflowViewState.IdRef="If_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="441,491" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_42">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0012</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2.Replace("{0}",in_dict_config(currentItem).ToString)]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                                <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_10" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="400,192" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_43">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[in_dict_config(currentItem+"Index")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[int_RowIndex]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </ui:CommentOut.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:CommentOut>
            <Assign sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_45">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[in_dict_config("PONumber")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[String.Join("",out_dt_singularity(0)(int_PurchaseOrderIndex).ToString.Replace("[","").Replace("'","").Replace("]","").Replace(".","").split(" "c))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_46">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[in_dict_config("RequestDate")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Join("",out_dt_singularity(0)(int_ShiptoArriveIndex).ToString.Replace("[","").Replace("'","").Replace("]","").Replace(".","").split(" "c))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_47">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[in_dict_config("ShipLocation")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[out_dt_singularity(0)(int_ShipLocationIndex).ToString.Replace("[","").Replace("'","").Replace("]","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="619,70" sap2010:WorkflowViewState.IdRef="Assign_48">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[bool_locationFlag]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Loop over shipto location field" DisplayName="Loop over shipto location field" sap:VirtualizedContainerService.HintSize="619,852" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[in_dict_config(&quot;ShipLocation&quot;).tostring.split(&quot;,&quot;c)]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="544,687" sap2010:WorkflowViewState.IdRef="Sequence_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[IsNumeric(currentItem.ToString.Trim.split(&quot; &quot;c)(0)) and currentItem.ToString.Trim.Split(&quot; &quot;c).Length&gt;1]" sap:VirtualizedContainerService.HintSize="482,565" sap2010:WorkflowViewState.IdRef="If_13">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,302" sap2010:WorkflowViewState.IdRef="Sequence_41">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_49">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[bool_locationFlag]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_50">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[in_dict_config("ShipLocation")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[if(currentItem.ToString.Trim.split(" "c)(1).Length&gt;1,currentItem.ToString.Trim.split(" "c)(0) + " " + Left(currentItem.ToString.Trim.split(" "c)(1),2),currentItem.ToString.Trim.split(" "c)(0) + " " + Left(currentItem.ToString.Trim.split(" "c)(1),1))]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If sap2010:Annotation.AnnotationText="If: Not getting specific location throw BE" Condition="[Not(bool_locationFlag)]" DisplayName="If: Not getting specific location throw BE" sap:VirtualizedContainerService.HintSize="619,103" sap2010:WorkflowViewState.IdRef="If_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="441,491" sap2010:WorkflowViewState.IdRef="Sequence_44">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_51">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0014</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeWorkflowFile>
                  <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_11" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="400,113" sap2010:WorkflowViewState.IdRef="Sequence_45">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
            <ui:MultipleAssign sap2010:Annotation.AnnotationText="1. Initialize New lists&#xA;2. Assign Mail Subject&#xA;3. Assign Mail Address&#xA;4. Assign Sender Name" DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="619,306" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">[out_list_OrderItem]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">[New List(of String)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">[out_list_quantity]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Object">[in_dict_config("MailSubject")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Object">[out_mailmessage.Subject]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Object">[in_dict_config("MailSenderAddress")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Object">[out_mailmessage.SenderEmailAddress]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_23">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:Object">[in_dict_config("MailSenderName")]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:Object">[out_mailmessage.Sender.DisplayName]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MultipleAssign>
            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each: lookup vendor codes from vendor mapping file" DataTable="[out_dt_singularity]" DisplayName="For Each: lookup vendor codes from vendor mapping file" sap:VirtualizedContainerService.HintSize="619,2719" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="585,2563" sap2010:WorkflowViewState.IdRef="Sequence_50">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Int32" Name="int_rowIndex" />
                      <Variable x:TypeArguments="x:String" Name="str_orderItem" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[CurrentRow(in_dict_config(&quot;SingularityVPCColumn&quot;).ToString).ToString.trim=&quot;&quot; Or CurrentRow(in_dict_config(&quot;SingularityQuantityColumn&quot;).ToString).ToString.Trim = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="523,754" sap2010:WorkflowViewState.IdRef="If_15">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="441,491" sap2010:WorkflowViewState.IdRef="Sequence_47">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_52">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0013</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2.Replace("{0}",if(CurrentRow(in_dict_config("SingularityVPCColumn").ToString).ToString.trim="","Vendor product code","Quantity"))]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_12" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <ui:LookupDataTable CellValue="{x:Null}" LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" TargetColumnIndex="{x:Null}" TargetColumnName="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_dt_vendorfile]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="523,301" sap2010:WorkflowViewState.IdRef="LookupDataTable_4" LookupColumnName="[in_dict_config(&quot;VendorMappingVPCColumn&quot;).ToString]" LookupValue="[CurrentRow(in_dict_config(&quot;SingularityVPCColumn&quot;).ToString).ToString]" RowIndex="[int_rowIndex]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:LookupDataTable>
                    <If Condition="[int_rowIndex = -1]" sap:VirtualizedContainerService.HintSize="523,754" sap2010:WorkflowViewState.IdRef="If_16">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="441,491" sap2010:WorkflowViewState.IdRef="Sequence_49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="379,70" sap2010:WorkflowViewState.IdRef="Assign_53">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[ExceptionMessage]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">EX-LBM-NEDI-0008</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke_Log Wrapper" sap:VirtualizedContainerService.HintSize="379,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="RPA_Core_Workflows\RPA_Core_Logging_Wrapper.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_dict_config]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message">[in_Tuple_Config(ExceptionMessage).Item2.Replace("{0}",CurrentRow(in_dict_config("SingularityVPCColumn").ToString).ToString)]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Executing_Xaml">FIJI_COE_FetchDataFromSingularity</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Message_ID">[ExceptionMessage]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_Log_Level_Type">[in_dict_config("Success_ LogTypeMessages").ToString.split(","c)(1)]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeWorkflowFile>
                          <Throw DisplayName="Throw Business Exception" Exception="[New BusinessRuleException(ExceptionMessage)]" sap:VirtualizedContainerService.HintSize="379,97" sap2010:WorkflowViewState.IdRef="Throw_13" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <Assign sap:VirtualizedContainerService.HintSize="523,70" sap2010:WorkflowViewState.IdRef="Assign_54">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[str_orderItem]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_dt_vendorfile(int_rowIndex)(1).tostring]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[out_list_OrderItem]" DisplayName="Append item to collection" sap:VirtualizedContainerService.HintSize="523,181" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_5" Result="[out_list_OrderItem]">
                      <uasc:AppendItemToCollection.Items>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[str_orderItem]</InArgument>
                        </scg:List>
                      </uasc:AppendItemToCollection.Items>
                    </uasc:AppendItemToCollection>
                    <uasc:AppendItemToCollection x:TypeArguments="x:String" Collection="[out_list_quantity]" DisplayName="Append item to collection" sap:VirtualizedContainerService.HintSize="523,181" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_6" Result="[out_list_quantity]">
                      <uasc:AppendItemToCollection.Items>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                          <InArgument x:TypeArguments="x:String">[CurrentRow("Quantity").ToString]</InArgument>
                        </scg:List>
                      </uasc:AppendItemToCollection.Items>
                    </uasc:AppendItemToCollection>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEachRow>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FIJI_COE_DataEntry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="619,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="RPA_Custom_Workflows\FIJI_COE_DataEntry.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_customer_po">[in_dict_config("PONumber").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_shiplocation_to">[in_dict_config("ShipLocation").ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_requestdate">[in_dict_config("RequestDate").ToString + " 00:00:00"]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_config">[in_dict_config]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" x:Key="in_tuple_config">[in_tuple_config]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="FIJI_COE_LineItemsEntry.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="619,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="RPA_Custom_Workflows\FIJI_COE_LineItemsEntry.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_li_orderItems">[out_list_OrderItem]</InArgument>
                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_li_quantity">[out_list_quantity]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_dict_config">[in_dict_config]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, s:Tuple(x:String, x:String))" x:Key="in_tuple_config">[in_tuple_config]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_str_customer_po">[in_dict_config("PONumber").ToString]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[in_dict_config(&quot;SingularityProcessedFolderPath&quot;).ToString + Path.GetFileName(in_TransactionItem)]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="619,168" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[in_TransactionItem]" />
          </Sequence>
          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="For Each file in Singularity Outputs folder" DisplayName="For Each file in Singularity Outputs folder" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Directory.GetFiles(in_dict_config(&quot;SingularityOutputsFolderPath&quot;).ToString)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="currentItem" />
                </ActivityAction.Argument>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="621,61" sap2010:WorkflowViewState.IdRef="CommentOut_6">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,549" sap2010:WorkflowViewState.IdRef="Sequence_52">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_37">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_singuOutputFileName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_dict_config("SingularityOutputsFolderPath").ToString + Path.GetFileNameWithoutExtension(out_mailmessage.Attachments(0).Name) + ".xlsx"]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_38">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_singuOutputFileName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">D:\Test POs for OCR BOT\erewhon\EREWHON PO2257.xlsx</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[out_dt_singularity1]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="338,97" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="[in_dict_config(&quot;SingularitySheetName2&quot;).ToString]" WorkbookPath="[str_singuOutputFileName]" />
          <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_44">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[in_dict_config("PONumber")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[System.Text.RegularExpressions.Regex.Replace(out_dt_singularity1(Cint(in_dict_config("SingularityPurchaseOrderFieldIndex")))(2).ToString, “[^a-zA-Z0-9]”, “”)]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>